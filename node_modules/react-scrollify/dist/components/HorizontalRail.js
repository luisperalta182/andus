'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _helpers = require('../helpers');

var _helpers2 = _interopRequireDefault(_helpers);

var _HorizontalBar = require('./HorizontalBar');

var _HorizontalBar2 = _interopRequireDefault(_HorizontalBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HorizontalRail = function (_React$Component) {
    (0, _inherits3.default)(HorizontalRail, _React$Component);

    function HorizontalRail(props) {
        (0, _classCallCheck3.default)(this, HorizontalRail);

        var _this = (0, _possibleConstructorReturn3.default)(this, (HorizontalRail.__proto__ || (0, _getPrototypeOf2.default)(HorizontalRail)).call(this, props));

        _this.handleOnClick = _this.handleOnClick.bind(_this);
        _this.updateScrollAndGeometry = _this.updateScrollAndGeometry.bind(_this);
        return _this;
    }

    (0, _createClass3.default)(HorizontalRail, [{
        key: 'componentDidMount',
        value: function componentDidMount() {}
    }, {
        key: 'handleOnClick',
        value: function handleOnClick(e) {
            var _props = this.props,
                horizontalBarLeft = _props.horizontalBarLeft,
                containerWidth = _props.containerWidth;

            var positionLeft = e.pageX - window.pageXOffset - _reactDom2.default.findDOMNode(this).getBoundingClientRect().left;
            var direction = positionLeft > horizontalBarLeft ? 1 : -1;
            var newLeft = _reactDom2.default.findDOMNode(this).parentNode.scrollLeft + direction * containerWidth;

            this.updateScrollAndGeometry(newLeft);

            e.stopPropagation();
        }
    }, {
        key: 'updateScrollAndGeometry',
        value: function updateScrollAndGeometry(newLeft) {
            // this.props.updateContainerScroll('left', newLeft);
            // this.props.updateGeometry();
        }
    }, {
        key: 'render',
        value: function render() {
            var style = {
                width: this.props.horizontalRailWidth + 'px',
                left: this.props.horizontalRailLeft + 'px'
            };
            if (this.props.isHorizontalBarUsingBottom) {
                style['bottom'] = this.props.horizontalRailBottom + 'px';
            } else {
                style['top'] = this.props.horizontalRailTop + 'px';
            }

            return _react2.default.createElement(
                'div',
                {
                    className: 'ps-scrollbar-x-rail',
                    style: style,
                    onClick: this.handleOnClick
                },
                _react2.default.createElement(_HorizontalBar2.default, this.props)
            );
        }
    }]);
    return HorizontalRail;
}(_react2.default.Component);

exports.default = HorizontalRail;