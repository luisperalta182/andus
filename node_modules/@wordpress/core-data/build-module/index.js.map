{"version":3,"sources":["@wordpress/core-data/src/index.js"],"names":["createReduxStore","register","controls","reducer","selectors","actions","resolvers","locksSelectors","locksActions","customControls","defaultEntities","getMethodName","STORE_NAME","entitySelectors","reduce","result","entity","kind","name","state","key","query","getEntityRecord","args","getEntityRecords","entityResolvers","pluralMethodName","shouldInvalidate","action","entityActions","saveEntityRecord","deleteEntityRecord","storeConfig","store","default","EntityProvider"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\nimport { controls } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport * as locksSelectors from './locks/selectors';\nimport * as locksActions from './locks/actions';\nimport customControls from './controls';\nimport { defaultEntities, getMethodName } from './entities';\nimport { STORE_NAME } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key, query ) =>\n\t\tselectors.getEntityRecord( state, kind, name, key, query );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) =>\n\t\tselectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key, query ) =>\n\t\tresolvers.getEntityRecord( kind, name, key, query );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) =>\n\t\tresolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) =>\n\t\tresolvers.getEntityRecords.shouldInvalidate(\n\t\t\taction,\n\t\t\tkind,\n\t\t\tname,\n\t\t\t...args\n\t\t);\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) =>\n\t\tactions.saveEntityRecord( kind, name, key );\n\tresult[ getMethodName( kind, name, 'delete' ) ] = ( key, query ) =>\n\t\tactions.deleteEntityRecord( kind, name, key, query );\n\treturn result;\n}, {} );\n\nconst storeConfig = {\n\treducer,\n\tcontrols: { ...customControls, ...controls },\n\tactions: { ...actions, ...entityActions, ...locksActions },\n\tselectors: { ...selectors, ...entitySelectors, ...locksSelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n};\n\n/**\n * Store definition for the code data namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\nregister( store );\n\nexport { default as EntityProvider } from './entity-provider';\nexport * from './entity-provider';\nexport * from './fetch';\n"]}