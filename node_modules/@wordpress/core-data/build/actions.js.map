{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","entity","error","deletedRecord","lock","STORE_NAME","exclusive","path","baseURL","options","method","_error","editEntityRecord","controls","select","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undo","undoIgnore","undoEdit","isUndo","redo","redoEdit","isRedo","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","entityIdKey","DEFAULT_ENTITY_KEY","entries","evaluatedValue","updatedRecord","persistedRecord","currentUserId","id","autosavePost","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","dispatch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","some","item","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport { controls } from '@wordpress/data';\nimport { apiFetch, __unstableAwaitPromise } from '@wordpress/data-controls';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport {\n\t__unstableAcquireStoreLock,\n\t__unstableReleaseStoreLock,\n} from './locks';\nimport { createBatch } from './batch';\nimport { getDispatch } from './controls';\nimport { STORE_NAME } from './name';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}   kind                      Kind of the deleted entity.\n * @param {string}   name                      Name of the deleted entity.\n * @param {string}   recordId                  Record ID of the deleted entity.\n * @param {?Object}  query                     Special query parameters for the\n *                                             DELETE API call.\n * @param {Object}   [options]                 Delete options.\n * @param {Function} [options.__unstableFetch] Internal use only. Function to\n *                                             call instead of `apiFetch()`.\n *                                             Must return a control descriptor.\n */\nexport function* deleteEntityRecord(\n\tkind,\n\tname,\n\trecordId,\n\tquery,\n\t{ __unstableFetch = null } = {}\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'data', kind, name, recordId ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t};\n\n\t\ttry {\n\t\t\tlet path = `${ entity.baseURL }/${ recordId }`;\n\n\t\t\tif ( query ) {\n\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\tpath,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t};\n\t\t\tif ( __unstableFetch ) {\n\t\t\t\tdeletedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdeletedRecord = yield apiFetch( options );\n\t\t\t}\n\n\t\t\tyield removeItems( kind, name, recordId, true );\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t};\n\n\t\treturn deletedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}  kind               Kind of the edited entity record.\n * @param {string}  name               Name of the edited entity record.\n * @param {number}  recordId           Record ID of the edited entity record.\n * @param {Object}  edits              The edits.\n * @param {Object}  options            Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield controls.select( STORE_NAME, 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield controls.select(\n\t\tSTORE_NAME,\n\t\t'getRawEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editedRecord = yield controls.select(\n\t\tSTORE_NAME,\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield controls.select( STORE_NAME, 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield controls.select( STORE_NAME, 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                       Kind of the received entity.\n * @param {string}   name                       Name of the received entity.\n * @param {Object}   record                     Record to be saved.\n * @param {Object}   options                    Saving options.\n * @param {boolean}  [options.isAutosave=false] Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]  Internal use only. Function to\n *                                              call instead of `apiFetch()`.\n *                                              Must return a control\n *                                              descriptor.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false, __unstableFetch = null } = {}\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'data', kind, name, recordId || uuid() ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\t// Evaluate optimized edits.\n\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\tyield controls.select(\n\t\t\t\t\t\tSTORE_NAME,\n\t\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tyield editEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t},\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t}\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\tisAutosave,\n\t\t};\n\t\tlet updatedRecord;\n\t\tlet error;\n\t\ttry {\n\t\t\tconst path = `${ entity.baseURL }${\n\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t}`;\n\t\t\tconst persistedRecord = yield controls.select(\n\t\t\t\tSTORE_NAME,\n\t\t\t\t'getRawEntityRecord',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\n\t\t\tif ( isAutosave ) {\n\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\tconst currentUser = yield controls.select(\n\t\t\t\t\tSTORE_NAME,\n\t\t\t\t\t'getCurrentUser'\n\t\t\t\t);\n\t\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\t\tconst autosavePost = yield controls.select(\n\t\t\t\t\tSTORE_NAME,\n\t\t\t\t\t'getAutosave',\n\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\tcurrentUserId\n\t\t\t\t);\n\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t// have a value.\n\t\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes( key )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst options = {\n\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata,\n\t\t\t\t};\n\t\t\t\tif ( __unstableFetch ) {\n\t\t\t\t\tupdatedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedRecord = yield apiFetch( options );\n\t\t\t\t}\n\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t// draft or auto-draft status.\n\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t};\n\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet edits = record;\n\t\t\t\tif ( entity.__unstablePrePersist ) {\n\t\t\t\t\tedits = {\n\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t...entity.__unstablePrePersist(\n\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst options = {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\tdata: edits,\n\t\t\t\t};\n\t\t\t\tif ( __unstableFetch ) {\n\t\t\t\t\tupdatedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedRecord = yield apiFetch( options );\n\t\t\t\t}\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tupdatedRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tedits\n\t\t\t\t);\n\t\t\t}\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t\tisAutosave,\n\t\t};\n\n\t\treturn updatedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {Promise} A promise that resolves to an array containing the return\n *                   values of each function given in `requests`.\n */\nexport function* __experimentalBatch( requests ) {\n\tconst batch = createBatch();\n\tconst dispatch = yield getDispatch();\n\tconst api = {\n\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( STORE_NAME ).saveEntityRecord( kind, name, record, {\n\t\t\t\t\t...options,\n\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( STORE_NAME ).saveEditedEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( STORE_NAME ).deleteEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\tquery,\n\t\t\t\t\t{\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t};\n\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\tconst [ , ...results ] = yield __unstableAwaitPromise(\n\t\tPromise.all( [ batch.run(), ...resultPromises ] )\n\t);\n\treturn results;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield controls.select(\n\t\t\tSTORE_NAME,\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield controls.select(\n\t\tSTORE_NAME,\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\treturn yield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string} kind        Kind of the entity.\n * @param {string} name        Name of the entity.\n * @param {Object} recordId    ID of the record.\n * @param {Array}  itemsToSave List of entity properties to save.\n * @param {Object} options     Saving options.\n */\nexport function* __experimentalSaveSpecifiedEntityEdits(\n\tkind,\n\tname,\n\trecordId,\n\titemsToSave,\n\toptions\n) {\n\tif (\n\t\t! ( yield controls.select(\n\t\t\tSTORE_NAME,\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield controls.select(\n\t\tSTORE_NAME,\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editsToSave = {};\n\tfor ( const edit in edits ) {\n\t\tif ( itemsToSave.some( ( item ) => item === edit ) ) {\n\t\t\teditsToSave[ edit ] = edits[ edit ];\n\t\t}\n\t}\n\treturn yield* saveEntityRecord( kind, name, editsToSave, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}