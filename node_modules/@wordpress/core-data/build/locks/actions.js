"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__unstableAcquireStoreLock = __unstableAcquireStoreLock;
exports.__unstableEnqueueLockRequest = __unstableEnqueueLockRequest;
exports.__unstableReleaseStoreLock = __unstableReleaseStoreLock;
exports.__unstableProcessPendingLockRequests = __unstableProcessPendingLockRequests;

var _dataControls = require("@wordpress/data-controls");

var _data = require("@wordpress/data");

var _name = require("../name");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function* __unstableAcquireStoreLock(store, path, {
  exclusive
}) {
  const promise = yield* __unstableEnqueueLockRequest(store, path, {
    exclusive
  });
  yield* __unstableProcessPendingLockRequests();
  return yield (0, _dataControls.__unstableAwaitPromise)(promise);
}

function* __unstableEnqueueLockRequest(store, path, {
  exclusive
}) {
  let notifyAcquired;
  const promise = new Promise(resolve => {
    notifyAcquired = resolve;
  });
  yield {
    type: 'ENQUEUE_LOCK_REQUEST',
    request: {
      store,
      path,
      exclusive,
      notifyAcquired
    }
  };
  return promise;
}

function* __unstableReleaseStoreLock(lock) {
  yield {
    type: 'RELEASE_LOCK',
    lock
  };
  yield* __unstableProcessPendingLockRequests();
}

function* __unstableProcessPendingLockRequests() {
  yield {
    type: 'PROCESS_PENDING_LOCK_REQUESTS'
  };
  const lockRequests = yield _data.controls.select(_name.STORE_NAME, '__unstableGetPendingLockRequests');

  for (const request of lockRequests) {
    const {
      store,
      path,
      exclusive,
      notifyAcquired
    } = request;
    const isAvailable = yield _data.controls.select(_name.STORE_NAME, '__unstableIsLockAvailable', store, path, {
      exclusive
    });

    if (isAvailable) {
      const lock = {
        store,
        path,
        exclusive
      };
      yield {
        type: 'GRANT_LOCK_REQUEST',
        lock,
        request
      };
      notifyAcquired(lock);
    }
  }
}
//# sourceMappingURL=actions.js.map