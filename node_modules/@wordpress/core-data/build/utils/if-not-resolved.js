"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _data = require("@wordpress/data");

var _name = require("../name");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Higher-order function which invokes the given resolver only if it has not
 * already been resolved with the arguments passed to the enhanced function.
 *
 * This only considers resolution state, and notably does not support resolver
 * custom `isFulfilled` behavior.
 *
 * @param {Function} resolver     Original resolver.
 * @param {string}   selectorName Selector name associated with resolver.
 *
 * @return {Function} Enhanced resolver.
 */
const ifNotResolved = (resolver, selectorName) =>
/**
 * @param {...any} args Original resolver arguments.
 */
function* resolveIfNotResolved(...args) {
  const hasStartedResolution = yield _data.controls.select(_name.STORE_NAME, 'hasStartedResolution', selectorName, args);

  if (!hasStartedResolution) {
    yield* resolver(...args);
  }
};

var _default = ifNotResolved;
exports.default = _default;
//# sourceMappingURL=if-not-resolved.js.map