{"version":3,"sources":["@wordpress/block-library/src/embed/edit.native.js"],"names":["EmbedEdit","props","attributes","providerNameSlug","previewable","responsive","url","isSelected","onReplace","setAttributes","insertBlocksAfter","onFocus","clientId","defaultEmbedInfo","title","icon","embedContentIcon","wasBlockJustInserted","select","blockEditorStore","isEditingURL","setIsEditingURL","preview","fetching","cannotEmbed","getEmbedPreview","isPreviewEmbedFallback","isRequestingEmbedPreview","coreStore","embedPreview","previewIsFallback","badEmbedProvider","html","type","undefined","wordpressCantEmbed","code","validPreview","isFetching","getMergedAttributes","allowResponsive","className","newURL","replace","upgradedBlock","blockProps","showEmbedPlaceholder","classFromPreview","event","value"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetAttributesFromPreview,\n\tgetEmbedInfoByProvider,\n} from './util';\nimport EmbedControls from './embed-controls';\nimport { embedContentIcon } from './icons';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\nimport EmbedBottomSheet from './embed-bottom-sheet';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { View } from '@wordpress/primitives';\n\nconst EmbedEdit = ( props ) => {\n\tconst {\n\t\tattributes: { providerNameSlug, previewable, responsive, url },\n\t\tattributes,\n\t\tisSelected,\n\t\tonReplace,\n\t\tsetAttributes,\n\t\tinsertBlocksAfter,\n\t\tonFocus,\n\t\tclientId,\n\t} = props;\n\n\tconst defaultEmbedInfo = {\n\t\ttitle: _x( 'Embed', 'block title' ),\n\t\ticon: embedContentIcon,\n\t};\n\tconst { icon, title } =\n\t\tgetEmbedInfoByProvider( providerNameSlug ) || defaultEmbedInfo;\n\n\tconst { wasBlockJustInserted } = useSelect(\n\t\t( select ) => ( {\n\t\t\twasBlockJustInserted: select(\n\t\t\t\tblockEditorStore\n\t\t\t).wasBlockJustInserted( clientId, 'inserter_menu' ),\n\t\t} ),\n\t\t[ clientId ]\n\t);\n\tconst [ isEditingURL, setIsEditingURL ] = useState(\n\t\tisSelected && wasBlockJustInserted && ! url\n\t);\n\n\tconst { preview, fetching, cannotEmbed } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEmbedPreview,\n\t\t\t\tisPreviewEmbedFallback,\n\t\t\t\tisRequestingEmbedPreview,\n\t\t\t} = select( coreStore );\n\t\t\tif ( ! url ) {\n\t\t\t\treturn { fetching: false, cannotEmbed: false };\n\t\t\t}\n\n\t\t\tconst embedPreview = getEmbedPreview( url );\n\t\t\tconst previewIsFallback = isPreviewEmbedFallback( url );\n\n\t\t\t// The external oEmbed provider does not exist. We got no type info and no html.\n\t\t\tconst badEmbedProvider =\n\t\t\t\tembedPreview?.html === false &&\n\t\t\t\tembedPreview?.type === undefined;\n\t\t\t// Some WordPress URLs that can't be embedded will cause the API to return\n\t\t\t// a valid JSON response with no HTML and `code` set to 404, rather\n\t\t\t// than generating a fallback response as other embeds do.\n\t\t\tconst wordpressCantEmbed = embedPreview?.code === '404';\n\t\t\tconst validPreview =\n\t\t\t\t!! embedPreview && ! badEmbedProvider && ! wordpressCantEmbed;\n\n\t\t\t// `isRequestingEmbedPreview` is returning false just before an\n\t\t\t// `apiFetch` is triggered. We're assuming that a fetch is happening\n\t\t\t// if there is an `attributesUrl` set but there is no data in\n\t\t\t// `embedPreview` which represents the response returned from the API.\n\t\t\tconst isFetching =\n\t\t\t\tisRequestingEmbedPreview( url ) || ( url && ! embedPreview );\n\n\t\t\treturn {\n\t\t\t\tpreview: validPreview ? embedPreview : undefined,\n\t\t\t\tfetching: isFetching,\n\t\t\t\tcannotEmbed: ! validPreview || previewIsFallback,\n\t\t\t};\n\t\t},\n\t\t[ url ]\n\t);\n\n\t/**\n\t * @return {Object} Attributes derived from the preview, merged with the current attributes.\n\t */\n\tconst getMergedAttributes = () => {\n\t\tconst { allowResponsive, className } = attributes;\n\t\treturn {\n\t\t\t...attributes,\n\t\t\t...getAttributesFromPreview(\n\t\t\t\tpreview,\n\t\t\t\ttitle,\n\t\t\t\tclassName,\n\t\t\t\tresponsive,\n\t\t\t\tallowResponsive\n\t\t\t),\n\t\t};\n\t};\n\n\tuseEffect( () => {\n\t\tif ( ! preview?.html || ! cannotEmbed || fetching ) {\n\t\t\treturn;\n\t\t}\n\t\t// At this stage, we're not fetching the preview and know it can't be embedded,\n\t\t// so try removing any trailing slash, and resubmit.\n\t\tconst newURL = url.replace( /\\/$/, '' );\n\t\tsetIsEditingURL( false );\n\t\tsetAttributes( { url: newURL } );\n\t}, [ preview?.html, url ] );\n\n\t// Handle incoming preview\n\tuseEffect( () => {\n\t\tif ( preview && ! isEditingURL ) {\n\t\t\t// Even though we set attributes that get derived from the preview,\n\t\t\t// we don't access them directly because for the initial render,\n\t\t\t// the `setAttributes` call will not have taken effect. If we're\n\t\t\t// rendering responsive content, setting the responsive classes\n\t\t\t// after the preview has been rendered can result in unwanted\n\t\t\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t\t\t// that `getMergedAttributes` uses is memoized so that we're not\n\t\t\t// calculating them on every render.\n\t\t\tsetAttributes( getMergedAttributes() );\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tprops,\n\t\t\t\t\tgetMergedAttributes()\n\t\t\t\t);\n\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tonReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [ preview, isEditingURL ] );\n\n\tconst blockProps = useBlockProps();\n\n\tif ( fetching ) {\n\t\treturn (\n\t\t\t<View { ...blockProps }>\n\t\t\t\t<EmbedLoading />\n\t\t\t</View>\n\t\t);\n\t}\n\n\tconst showEmbedPlaceholder = ! preview || cannotEmbed;\n\tconst { type, className: classFromPreview } = getMergedAttributes();\n\tconst className = classnames( classFromPreview, props.className );\n\n\treturn (\n\t\t<>\n\t\t\t{ showEmbedPlaceholder ? (\n\t\t\t\t<View { ...blockProps }>\n\t\t\t\t\t<EmbedPlaceholder\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\tonPress={ ( event ) => {\n\t\t\t\t\t\t\tonFocus( event );\n\t\t\t\t\t\t\tsetIsEditingURL( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<EmbedControls\n\t\t\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\t\t\tswitchBackToURLInput={ () => setIsEditingURL( true ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<View { ...blockProps }>\n\t\t\t\t\t\t<EmbedPreview\n\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tpreview={ preview }\n\t\t\t\t\t\t\tpreviewable={ previewable }\n\t\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<EmbedBottomSheet\n\t\t\t\tvalue={ url }\n\t\t\t\tisVisible={ isEditingURL }\n\t\t\t\tonClose={ () => setIsEditingURL( false ) }\n\t\t\t\tonSubmit={ ( value ) => {\n\t\t\t\t\tsetIsEditingURL( false );\n\t\t\t\t\tsetAttributes( { url: value } );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default EmbedEdit;\n"]}