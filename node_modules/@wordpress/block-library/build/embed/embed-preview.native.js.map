{"version":3,"sources":["@wordpress/block-library/src/embed/embed-preview.native.js"],"names":["EmbedPreview","className","clientId","icon","insertBlocksAfter","isSelected","label","onFocus","preview","previewable","type","url","isCaptionSelected","setIsCaptionSelected","accessibilityLabelCreator","caption","onEmbedPreviewPress","onFocusCaption","provider_url","providerUrl","html","parsedHost","URL","host","split","parsedHostBaseUrl","splice","length","join","iframeTitle","sandboxClassnames","embedWrapper","__DEV__"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableWithoutFeedback } from 'react-native';\nimport { isEmpty } from 'lodash';\nimport classnames from 'classnames/dedupe';\n\n/**\n * WordPress dependencies\n */\nimport { View } from '@wordpress/primitives';\n\nimport { BlockCaption } from '@wordpress/block-editor';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { memo, useState } from '@wordpress/element';\nimport { SandBox } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { getPhotoHtml } from './util';\nimport EmbedNoPreview from './embed-no-preview';\n\nconst EmbedPreview = ( {\n\tclassName,\n\tclientId,\n\ticon,\n\tinsertBlocksAfter,\n\tisSelected,\n\tlabel,\n\tonFocus,\n\tpreview,\n\tpreviewable,\n\ttype,\n\turl,\n} ) => {\n\tconst [ isCaptionSelected, setIsCaptionSelected ] = useState( false );\n\n\tfunction accessibilityLabelCreator( caption ) {\n\t\treturn isEmpty( caption )\n\t\t\t? /* translators: accessibility text. Empty Embed caption. */\n\t\t\t  __( 'Embed caption. Empty' )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: accessibility text. %s: Embed caption. */\n\t\t\t\t\t__( 'Embed caption. %s' ),\n\t\t\t\t\tcaption\n\t\t\t  );\n\t}\n\n\tfunction onEmbedPreviewPress() {\n\t\tsetIsCaptionSelected( false );\n\t}\n\n\tfunction onFocusCaption() {\n\t\tif ( onFocus ) {\n\t\t\tonFocus();\n\t\t}\n\t\tif ( ! isCaptionSelected ) {\n\t\t\tsetIsCaptionSelected( true );\n\t\t}\n\t}\n\n\tconst { provider_url: providerUrl } = preview;\n\tconst html = 'photo' === type ? getPhotoHtml( preview ) : preview.html;\n\tconst parsedHost = new URL( url ).host.split( '.' );\n\tconst parsedHostBaseUrl = parsedHost\n\t\t.splice( parsedHost.length - 2, parsedHost.length - 1 )\n\t\t.join( '.' );\n\tconst iframeTitle = sprintf(\n\t\t// translators: %s: host providing embed content e.g: www.youtube.com\n\t\t__( 'Embedded content from %s' ),\n\t\tparsedHostBaseUrl\n\t);\n\tconst sandboxClassnames = classnames(\n\t\ttype,\n\t\tclassName,\n\t\t'wp-block-embed__wrapper'\n\t);\n\n\tconst embedWrapper =\n\t\t/* We should render here: <WpEmbedPreview html={ html } /> */\n\t\t'wp-embed' === type ? null : (\n\t\t\t<>\n\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\tonPress={ () => {\n\t\t\t\t\t\tif ( onFocus ) {\n\t\t\t\t\t\t\tonFocus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( isCaptionSelected ) {\n\t\t\t\t\t\t\tsetIsCaptionSelected( false );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<View pointerEvents=\"box-only\">\n\t\t\t\t\t\t<SandBox\n\t\t\t\t\t\t\thtml={ html }\n\t\t\t\t\t\t\ttitle={ iframeTitle }\n\t\t\t\t\t\t\ttype={ sandboxClassnames }\n\t\t\t\t\t\t\tproviderUrl={ providerUrl }\n\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t</>\n\t\t);\n\n\treturn (\n\t\t<TouchableWithoutFeedback\n\t\t\taccessible={ ! isSelected }\n\t\t\tonPress={ onEmbedPreviewPress }\n\t\t\tdisabled={ ! isSelected }\n\t\t>\n\t\t\t<View>\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t__DEV__ && previewable ? (\n\t\t\t\t\t\tembedWrapper\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<EmbedNoPreview\n\t\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tonPress={ () => setIsCaptionSelected( false ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t<BlockCaption\n\t\t\t\t\taccessibilityLabelCreator={ accessibilityLabelCreator }\n\t\t\t\t\taccessible\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\tisSelected={ isCaptionSelected }\n\t\t\t\t\tonFocus={ onFocusCaption }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n};\n\nexport default memo( EmbedPreview );\n"]}