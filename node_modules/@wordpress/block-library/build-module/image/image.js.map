{"version":3,"sources":["@wordpress/block-library/src/image/image.js"],"names":["get","filter","map","last","pick","includes","isBlobURL","ExternalLink","PanelBody","ResizableBox","Spinner","TextareaControl","TextControl","ToolbarButton","useViewportMatch","usePrevious","useSelect","useDispatch","BlockControls","InspectorControls","InspectorAdvancedControls","RichText","__experimentalImageSizeControl","ImageSizeControl","__experimentalImageURLInputUI","ImageURLInputUI","MediaReplaceFlow","store","blockEditorStore","BlockAlignmentControl","useEffect","useState","useRef","__","sprintf","isRTL","getPath","createBlock","switchToBlockType","crop","overlayText","upload","noticesStore","coreStore","createUpgradedEmbedBlock","useClientWidth","ImageEditor","ImageEditingProvider","isExternalImage","MIN_SIZE","ALLOWED_MEDIA_TYPES","getFilename","url","path","split","Image","temporaryURL","attributes","alt","caption","align","id","href","rel","linkClass","linkDestination","title","width","height","linkTarget","sizeSlug","setAttributes","isSelected","insertBlocksAfter","onReplace","onSelectImage","onSelectURL","onUploadError","containerRef","clientId","captionRef","prevUrl","getBlock","image","multiImageSelection","select","getMedia","getMultiSelectedBlockClientIds","getBlockName","multiSelectedClientIds","length","every","_clientId","canInsertCover","imageEditing","imageSizes","maxWidth","mediaUpload","getBlockRootClientId","getSettings","canInsertBlockType","rootClientId","settings","replaceBlocks","toggleSelection","createErrorNotice","createSuccessNotice","isLargeViewport","isWideAligned","naturalWidth","naturalHeight","setNaturalSize","isEditingImage","setIsEditingImage","externalBlob","setExternalBlob","clientWidth","isResizable","imageSizeOptions","slug","name","value","label","window","fetch","then","response","blob","catch","current","focus","onResizeStart","onResizeStop","onImageError","embedBlock","undefined","onSetHref","props","onSetTitle","updateAlt","newAlt","updateImage","newSizeSlug","newUrl","uploadExternal","filesList","onFileChange","img","type","allowedTypes","onError","message","updateAlignment","nextAlign","extraUpdatedAttributes","canEditImage","allowCrop","switchToCover","controls","source_url","link","filename","defaultedAlt","event","target","imageWidthWithinContainer","imageHeightWithinContainer","exceedMaxWidth","ratio","currentWidth","currentHeight","minWidth","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","direction","elt","delta","parseInt","imageAttributes","isEmpty"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,QAAvD;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACCC,YADD,EAECC,SAFD,EAGCC,YAHD,EAICC,OAJD,EAKCC,eALD,EAMCC,WAND,EAOCC,aAPD,QAQO,uBARP;AASA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,oBAA9C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SACCC,aADD,EAECC,iBAFD,EAGCC,yBAHD,EAICC,QAJD,EAKCC,8BAA8B,IAAIC,gBALnC,EAMCC,6BAA6B,IAAIC,eANlC,EAOCC,gBAPD,EAQCC,KAAK,IAAIC,gBARV,EASCC,qBATD,QAUO,yBAVP;AAWA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,oBAA5C;AACA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,KAAtB,QAAmC,iBAAnC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,mBAA/C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,QAA0C,kBAA1C;AACA,SAASd,KAAK,IAAIe,YAAlB,QAAsC,oBAAtC;AACA,SAASf,KAAK,IAAIgB,SAAlB,QAAmC,sBAAnC;AAEA;AACA;AACA;;AACA,SAASC,wBAAT,QAAyC,eAAzC;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,WAAP,IAAsBC,oBAAtB,QAAkD,iBAAlD;AACA,SAASC,eAAT,QAAgC,QAAhC;AAEA;AACA;AACA;;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AAEA,SAASC,WAAT,CAAsBC,GAAtB,EAA4B;AAC3B,QAAMC,IAAI,GAAGjB,OAAO,CAAEgB,GAAF,CAApB;;AACA,MAAKC,IAAL,EAAY;AACX,WAAOlD,IAAI,CAAEkD,IAAI,CAACC,KAAL,CAAY,GAAZ,CAAF,CAAX;AACA;AACD;;AAED,eAAe,SAASC,KAAT,CAAgB;AAC9BC,EAAAA,YAD8B;AAE9BC,EAAAA,UAAU,EAAE;AACXL,IAAAA,GAAG,GAAG,EADK;AAEXM,IAAAA,GAFW;AAGXC,IAAAA,OAHW;AAIXC,IAAAA,KAJW;AAKXC,IAAAA,EALW;AAMXC,IAAAA,IANW;AAOXC,IAAAA,GAPW;AAQXC,IAAAA,SARW;AASXC,IAAAA,eATW;AAUXC,IAAAA,KAVW;AAWXC,IAAAA,KAXW;AAYXC,IAAAA,MAZW;AAaXC,IAAAA,UAbW;AAcXC,IAAAA;AAdW,GAFkB;AAkB9BC,EAAAA,aAlB8B;AAmB9BC,EAAAA,UAnB8B;AAoB9BC,EAAAA,iBApB8B;AAqB9BC,EAAAA,SArB8B;AAsB9BC,EAAAA,aAtB8B;AAuB9BC,EAAAA,WAvB8B;AAwB9BC,EAAAA,aAxB8B;AAyB9BC,EAAAA,YAzB8B;AA0B9BC,EAAAA;AA1B8B,CAAhB,EA2BX;AACH,QAAMC,UAAU,GAAGhD,MAAM,EAAzB;AACA,QAAMiD,OAAO,GAAGlE,WAAW,CAAEqC,GAAF,CAA3B;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAelE,SAAS,CAAEY,gBAAF,CAA9B;AACA,QAAM;AAAEuD,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiCpE,SAAS,CAC7CqE,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAeD,MAAM,CAAE1C,SAAF,CAA3B;AACA,UAAM;AAAE4C,MAAAA,8BAAF;AAAkCC,MAAAA;AAAlC,QAAmDH,MAAM,CAC9DzD,gBAD8D,CAA/D;AAGA,UAAM6D,sBAAsB,GAAGF,8BAA8B,EAA7D;AACA,WAAO;AACNJ,MAAAA,KAAK,EAAEtB,EAAE,IAAIW,UAAN,GAAmBc,QAAQ,CAAEzB,EAAF,CAA3B,GAAoC,IADrC;AAENuB,MAAAA,mBAAmB,EAClBK,sBAAsB,CAACC,MAAvB,IACAD,sBAAsB,CAACE,KAAvB,CACGC,SAAF,IACCJ,YAAY,CAAEI,SAAF,CAAZ,KAA8B,YAFhC;AAJK,KAAP;AASA,GAhB8C,EAiB/C,CAAE/B,EAAF,EAAMW,UAAN,CAjB+C,CAAhD;AAmBA,QAAM;AACLqB,IAAAA,cADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA;AALK,MAMFjF,SAAS,CACVqE,MAAF,IAAc;AACb,UAAM;AACLa,MAAAA,oBADK;AAELC,MAAAA,WAFK;AAGLC,MAAAA;AAHK,QAIFf,MAAM,CAAEzD,gBAAF,CAJV;AAMA,UAAMyE,YAAY,GAAGH,oBAAoB,CAAEnB,QAAF,CAAzC;AACA,UAAMuB,QAAQ,GAAGlG,IAAI,CAAE+F,WAAW,EAAb,EAAiB,CACrC,cADqC,EAErC,YAFqC,EAGrC,UAHqC,EAIrC,aAJqC,CAAjB,CAArB;AAOA,WAAO,EACN,GAAGG,QADG;AAENT,MAAAA,cAAc,EAAEO,kBAAkB,CACjC,YADiC,EAEjCC,YAFiC;AAF5B,KAAP;AAOA,GAvBW,EAwBZ,CAAEtB,QAAF,CAxBY,CANb;AAgCA,QAAM;AAAEwB,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAqCvF,WAAW,CAAEW,gBAAF,CAAtD;AACA,QAAM;AAAE6E,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA6CzF,WAAW,CAC7DyB,YAD6D,CAA9D;AAGA,QAAMiE,eAAe,GAAG7F,gBAAgB,CAAE,QAAF,CAAxC;AACA,QAAM8F,aAAa,GAAGvG,QAAQ,CAAE,CAAE,MAAF,EAAU,MAAV,CAAF,EAAsBuD,KAAtB,CAA9B;AACA,QAAM,CAAE;AAAEiD,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAF,EAAmCC,cAAnC,IAAsDhF,QAAQ,CAAE,EAAF,CAApE;AACA,QAAM,CAAEiF,cAAF,EAAkBC,iBAAlB,IAAwClF,QAAQ,CAAE,KAAF,CAAtD;AACA,QAAM,CAAEmF,YAAF,EAAgBC,eAAhB,IAAoCpF,QAAQ,EAAlD;AACA,QAAMqF,WAAW,GAAGvE,cAAc,CAAEiC,YAAF,EAAgB,CAAElB,KAAF,CAAhB,CAAlC;AACA,QAAMyD,WAAW,GAAG,CAAET,aAAF,IAAmBD,eAAvC;AACA,QAAMW,gBAAgB,GAAGpH,GAAG,CAC3BD,MAAM,CAAE8F,UAAF,EAAc,CAAE;AAAEwB,IAAAA;AAAF,GAAF,KACnBvH,GAAG,CAAEmF,KAAF,EAAS,CAAE,eAAF,EAAmB,OAAnB,EAA4BoC,IAA5B,EAAkC,YAAlC,CAAT,CADE,CADqB,EAI3B,CAAE;AAAEC,IAAAA,IAAF;AAAQD,IAAAA;AAAR,GAAF,MAAwB;AAAEE,IAAAA,KAAK,EAAEF,IAAT;AAAeG,IAAAA,KAAK,EAAEF;AAAtB,GAAxB,CAJ2B,CAA5B,CAlEG,CAyEH;AACA;AACA;;AACA1F,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAK,CAAEkB,eAAe,CAAEa,EAAF,EAAMT,GAAN,CAAjB,IAAgC,CAAEoB,UAAlC,IAAgD0C,YAArD,EAAoE;AACnE;AACA;;AAEDS,IAAAA,MAAM,CACJC,KADF,CACSxE,GADT,EAEEyE,IAFF,CAEUC,QAAF,IAAgBA,QAAQ,CAACC,IAAT,EAFxB,EAGEF,IAHF,CAGUE,IAAF,IAAYZ,eAAe,CAAEY,IAAF,CAHnC,EAIC;AAJD,KAKEC,KALF,CAKS,MAAM,CAAE,CALjB;AAMA,GAXQ,EAWN,CAAEnE,EAAF,EAAMT,GAAN,EAAWoB,UAAX,EAAuB0C,YAAvB,CAXM,CAAT,CA5EG,CAyFH;AACA;AACA;AACA;;AACApF,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKsB,GAAG,IAAI,CAAE6B,OAAT,IAAoBT,UAAzB,EAAsC;AACrCQ,MAAAA,UAAU,CAACiD,OAAX,CAAmBC,KAAnB;AACA;AACD,GAJQ,EAIN,CAAE9E,GAAF,EAAO6B,OAAP,CAJM,CAAT;;AAMA,WAASkD,aAAT,GAAyB;AACxB3B,IAAAA,eAAe,CAAE,KAAF,CAAf;AACA;;AAED,WAAS4B,YAAT,GAAwB;AACvB5B,IAAAA,eAAe,CAAE,IAAF,CAAf;AACA;;AAED,WAAS6B,YAAT,GAAwB;AACvB;AACA,UAAMC,UAAU,GAAG1F,wBAAwB,CAAE;AAAEa,MAAAA,UAAU,EAAE;AAAEL,QAAAA;AAAF;AAAd,KAAF,CAA3C;;AACA,QAAKmF,SAAS,KAAKD,UAAnB,EAAgC;AAC/B5D,MAAAA,SAAS,CAAE4D,UAAF,CAAT;AACA;AACD;;AAED,WAASE,SAAT,CAAoBC,KAApB,EAA4B;AAC3BlE,IAAAA,aAAa,CAAEkE,KAAF,CAAb;AACA;;AAED,WAASC,UAAT,CAAqBjB,KAArB,EAA6B;AAC5B;AACA;AACAlD,IAAAA,aAAa,CAAE;AAAEL,MAAAA,KAAK,EAAEuD;AAAT,KAAF,CAAb;AACA;;AAED,WAASkB,SAAT,CAAoBC,MAApB,EAA6B;AAC5BrE,IAAAA,aAAa,CAAE;AAAEb,MAAAA,GAAG,EAAEkF;AAAP,KAAF,CAAb;AACA;;AAED,WAASC,WAAT,CAAsBC,WAAtB,EAAoC;AACnC,UAAMC,MAAM,GAAG/I,GAAG,CAAEmF,KAAF,EAAS,CAC1B,eAD0B,EAE1B,OAF0B,EAG1B2D,WAH0B,EAI1B,YAJ0B,CAAT,CAAlB;;AAMA,QAAK,CAAEC,MAAP,EAAgB;AACf,aAAO,IAAP;AACA;;AAEDxE,IAAAA,aAAa,CAAE;AACdnB,MAAAA,GAAG,EAAE2F,MADS;AAEd5E,MAAAA,KAAK,EAAEoE,SAFO;AAGdnE,MAAAA,MAAM,EAAEmE,SAHM;AAIdjE,MAAAA,QAAQ,EAAEwE;AAJI,KAAF,CAAb;AAMA;;AAED,WAASE,cAAT,GAA0B;AACzB/C,IAAAA,WAAW,CAAE;AACZgD,MAAAA,SAAS,EAAE,CAAE/B,YAAF,CADC;;AAEZgC,MAAAA,YAAY,CAAE,CAAEC,GAAF,CAAF,EAAY;AACvBxE,QAAAA,aAAa,CAAEwE,GAAF,CAAb;;AAEA,YAAK7I,SAAS,CAAE6I,GAAG,CAAC/F,GAAN,CAAd,EAA4B;AAC3B;AACA;;AAED+D,QAAAA,eAAe;AACfT,QAAAA,mBAAmB,CAAEzE,EAAE,CAAE,iBAAF,CAAJ,EAA2B;AAC7CmH,UAAAA,IAAI,EAAE;AADuC,SAA3B,CAAnB;AAGA,OAbW;;AAcZC,MAAAA,YAAY,EAAEnG,mBAdF;;AAeZoG,MAAAA,OAAO,CAAEC,OAAF,EAAY;AAClB9C,QAAAA,iBAAiB,CAAE8C,OAAF,EAAW;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAX,CAAjB;AACA;;AAjBW,KAAF,CAAX;AAmBA;;AAED,WAASI,eAAT,CAA0BC,SAA1B,EAAsC;AACrC,UAAMC,sBAAsB,GAAG,CAAE,MAAF,EAAU,MAAV,EAAmBrJ,QAAnB,CAA6BoJ,SAA7B,IAC5B;AAAEtF,MAAAA,KAAK,EAAEoE,SAAT;AAAoBnE,MAAAA,MAAM,EAAEmE;AAA5B,KAD4B,GAE5B,EAFH;AAGAhE,IAAAA,aAAa,CAAE,EACd,GAAGmF,sBADW;AAEd9F,MAAAA,KAAK,EAAE6F;AAFO,KAAF,CAAb;AAIA;;AAED3H,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAK,CAAE0C,UAAP,EAAoB;AACnByC,MAAAA,iBAAiB,CAAE,KAAF,CAAjB;AACA;AACD,GAJQ,EAIN,CAAEzC,UAAF,CAJM,CAAT;AAMA,QAAMmF,YAAY,GAAG9F,EAAE,IAAIgD,YAAN,IAAsBC,aAAtB,IAAuChB,YAA5D;AACA,QAAM8D,SAAS,GAAG,CAAExE,mBAAF,IAAyBuE,YAAzB,IAAyC,CAAE3C,cAA7D;;AAEA,WAAS6C,aAAT,GAAyB;AACxBtD,IAAAA,aAAa,CACZxB,QADY,EAEZzC,iBAAiB,CAAE4C,QAAQ,CAAEH,QAAF,CAAV,EAAwB,YAAxB,CAFL,CAAb;AAIA;;AAED,QAAM+E,QAAQ,GACb,8BACC,cAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,cAAC,qBAAD;AACC,IAAA,KAAK,EAAGlG,KADT;AAEC,IAAA,QAAQ,EAAG4F;AAFZ,IADD,EAKG,CAAEpE,mBAAF,IAAyB,CAAE4B,cAA3B,IACD,cAAC,eAAD;AACC,IAAA,GAAG,EAAGlD,IAAI,IAAI,EADf;AAEC,IAAA,WAAW,EAAG0E,SAFf;AAGC,IAAA,eAAe,EAAGvE,eAHnB;AAIC,IAAA,QAAQ,EAAKkB,KAAK,IAAIA,KAAK,CAAC4E,UAAjB,IAAiC3G,GAJ7C;AAKC,IAAA,SAAS,EAAG+B,KAAK,IAAIA,KAAK,CAAC6E,IAL5B;AAMC,IAAA,UAAU,EAAG3F,UANd;AAOC,IAAA,SAAS,EAAGL,SAPb;AAQC,IAAA,GAAG,EAAGD;AARP,IANF,EAiBG6F,SAAS,IACV,cAAC,aAAD;AACC,IAAA,OAAO,EAAG,MAAM3C,iBAAiB,CAAE,IAAF,CADlC;AAEC,IAAA,IAAI,EAAG1E,IAFR;AAGC,IAAA,KAAK,EAAGN,EAAE,CAAE,MAAF;AAHX,IAlBF,EAwBGiF,YAAY,IACb,cAAC,aAAD;AACC,IAAA,OAAO,EAAG8B,cADX;AAEC,IAAA,IAAI,EAAGvG,MAFR;AAGC,IAAA,KAAK,EAAGR,EAAE,CAAE,uBAAF;AAHX,IAzBF,EA+BG,CAAEmD,mBAAF,IAAyBS,cAAzB,IACD,cAAC,aAAD;AACC,IAAA,IAAI,EAAGrD,WADR;AAEC,IAAA,KAAK,EAAGP,EAAE,CAAE,qBAAF,CAFX;AAGC,IAAA,OAAO,EAAG4H;AAHX,IAhCF,CADD,EAwCG,CAAEzE,mBAAF,IAAyB,CAAE4B,cAA3B,IACD,cAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,cAAC,gBAAD;AACC,IAAA,OAAO,EAAGnD,EADX;AAEC,IAAA,QAAQ,EAAGT,GAFZ;AAGC,IAAA,YAAY,EAAGF,mBAHhB;AAIC,IAAA,MAAM,EAAC,SAJR;AAKC,IAAA,QAAQ,EAAGyB,aALZ;AAMC,IAAA,WAAW,EAAGC,WANf;AAOC,IAAA,OAAO,EAAGC;AAPX,IADD,CAzCF,EAqDC,cAAC,iBAAD,QACC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG5C,EAAE,CAAE,gBAAF;AAArB,KACG,CAAEmD,mBAAF,IACD,cAAC,eAAD;AACC,IAAA,KAAK,EAAGnD,EAAE,CAAE,6BAAF,CADX;AAEC,IAAA,KAAK,EAAGyB,GAFT;AAGC,IAAA,QAAQ,EAAGiF,SAHZ;AAIC,IAAA,IAAI,EACH,8BACC,cAAC,YAAD;AAAc,MAAA,IAAI,EAAC;AAAnB,OACG1G,EAAE,CACH,mCADG,CADL,CADD,EAMGA,EAAE,CACH,gDADG,CANL;AALF,IAFF,EAoBC,cAAC,gBAAD;AACC,IAAA,aAAa,EAAG4G,WADjB;AAEC,IAAA,QAAQ,EAAKpB,KAAF,IAAalD,aAAa,CAAEkD,KAAF,CAFtC;AAGC,IAAA,IAAI,EAAGnD,QAHR;AAIC,IAAA,KAAK,EAAGH,KAJT;AAKC,IAAA,MAAM,EAAGC,MALV;AAMC,IAAA,gBAAgB,EAAGkD,gBANpB;AAOC,IAAA,WAAW,EAAGD,WAPf;AAQC,IAAA,UAAU,EAAGR,YARd;AASC,IAAA,WAAW,EAAGC;AATf,IApBD,CADD,CArDD,EAuFC,cAAC,yBAAD,QACC,cAAC,WAAD;AACC,IAAA,KAAK,EAAG7E,EAAE,CAAE,iBAAF,CADX;AAEC,IAAA,KAAK,EAAGiC,KAAK,IAAI,EAFlB;AAGC,IAAA,QAAQ,EAAGwE,UAHZ;AAIC,IAAA,IAAI,EACH,8BACGzG,EAAE,CACH,8CADG,CADL,EAIC,cAAC,YAAD;AAAc,MAAA,IAAI,EAAC;AAAnB,OACGA,EAAE,CACH,6DADG,CADL,CAJD;AALF,IADD,CAvFD,CADD;AA8GA,QAAMgI,QAAQ,GAAG9G,WAAW,CAAEC,GAAF,CAA5B;AACA,MAAI8G,YAAJ;;AAEA,MAAKxG,GAAL,EAAW;AACVwG,IAAAA,YAAY,GAAGxG,GAAf;AACA,GAFD,MAEO,IAAKuG,QAAL,EAAgB;AACtBC,IAAAA,YAAY,GAAGhI,OAAO;AACrB;AACAD,IAAAA,EAAE,CAAE,4DAAF,CAFmB,EAGrBgI,QAHqB,CAAtB;AAKA,GANM,MAMA;AACNC,IAAAA,YAAY,GAAGjI,EAAE,CAAE,uCAAF,CAAjB;AACA;;AAED,MAAIkH,GAAG,GACN;AACA;;AACA;AACA,gCACC;AACC,IAAA,GAAG,EAAG3F,YAAY,IAAIJ,GADvB;AAEC,IAAA,GAAG,EAAG8G,YAFP;AAGC,IAAA,OAAO,EAAG,MAAM7B,YAAY,EAH7B;AAIC,IAAA,MAAM,EAAK8B,KAAF,IAAa;AACrBpD,MAAAA,cAAc,CACb3G,IAAI,CAAE+J,KAAK,CAACC,MAAR,EAAgB,CACnB,cADmB,EAEnB,eAFmB,CAAhB,CADS,CAAd;AAMA;AAXF,IADD,EAcG5G,YAAY,IAAI,cAAC,OAAD,OAdnB;AAgBA;AApBD;AAuBA,MAAI6G,yBAAJ;AACA,MAAIC,0BAAJ;;AAEA,MAAKlD,WAAW,IAAIP,YAAf,IAA+BC,aAApC,EAAoD;AACnD,UAAMyD,cAAc,GAAG1D,YAAY,GAAGO,WAAtC;AACA,UAAMoD,KAAK,GAAG1D,aAAa,GAAGD,YAA9B;AACAwD,IAAAA,yBAAyB,GAAGE,cAAc,GAAGnD,WAAH,GAAiBP,YAA3D;AACAyD,IAAAA,0BAA0B,GAAGC,cAAc,GACxCnD,WAAW,GAAGoD,KAD0B,GAExC1D,aAFH;AAGA;;AAED,MAAK6C,YAAY,IAAI3C,cAArB,EAAsC;AACrCmC,IAAAA,GAAG,GACF,cAAC,WAAD;AACC,MAAA,GAAG,EAAG/F,GADP;AAEC,MAAA,KAAK,EAAGe,KAFT;AAGC,MAAA,MAAM,EAAGC,MAHV;AAIC,MAAA,WAAW,EAAGgD,WAJf;AAKC,MAAA,aAAa,EAAGN,aALjB;AAMC,MAAA,YAAY,EAAGD;AANhB,MADD;AAUA,GAXD,MAWO,IAAK,CAAEQ,WAAF,IAAiB,CAAEgD,yBAAxB,EAAoD;AAC1DlB,IAAAA,GAAG,GAAG;AAAK,MAAA,KAAK,EAAG;AAAEhF,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAb,OAAmC+E,GAAnC,CAAN;AACA,GAFM,MAEA;AACN,UAAMsB,YAAY,GAAGtG,KAAK,IAAIkG,yBAA9B;AACA,UAAMK,aAAa,GAAGtG,MAAM,IAAIkG,0BAAhC;AAEA,UAAME,KAAK,GAAG3D,YAAY,GAAGC,aAA7B;AACA,UAAM6D,QAAQ,GACb9D,YAAY,GAAGC,aAAf,GAA+B7D,QAA/B,GAA0CA,QAAQ,GAAGuH,KADtD;AAEA,UAAMI,SAAS,GACd9D,aAAa,GAAGD,YAAhB,GAA+B5D,QAA/B,GAA0CA,QAAQ,GAAGuH,KADtD,CAPM,CAUN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMK,cAAc,GAAG7E,QAAQ,GAAG,GAAlC;AAEA,QAAI8E,eAAe,GAAG,KAAtB;AACA,QAAIC,cAAc,GAAG,KAArB;AAEA;AACA;;AACA,QAAKnH,KAAK,KAAK,QAAf,EAA0B;AACzB;AACAkH,MAAAA,eAAe,GAAG,IAAlB;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACA,KAJD,MAIO,IAAK5I,KAAK,EAAV,EAAe;AACrB;AACA;AACA;AACA,UAAKyB,KAAK,KAAK,MAAf,EAAwB;AACvBkH,QAAAA,eAAe,GAAG,IAAlB;AACA,OAFD,MAEO;AACNC,QAAAA,cAAc,GAAG,IAAjB;AACA;AACD,KATM,MASA;AACN;AACA;AACA,UAAKnH,KAAK,KAAK,OAAf,EAAyB;AACxBmH,QAAAA,cAAc,GAAG,IAAjB;AACA,OAFD,MAEO;AACND,QAAAA,eAAe,GAAG,IAAlB;AACA;AACD;AACD;;;AAEA3B,IAAAA,GAAG,GACF,cAAC,YAAD;AACC,MAAA,IAAI,EAAG;AACNhF,QAAAA,KAAK,EAAEA,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,MADV;AAENC,QAAAA,MAAM,EAAEA,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAFZ,OADR;AAKC,MAAA,UAAU,EAAGI,UALd;AAMC,MAAA,QAAQ,EAAGmG,QANZ;AAOC,MAAA,QAAQ,EAAGE,cAPZ;AAQC,MAAA,SAAS,EAAGD,SARb;AASC,MAAA,SAAS,EAAGC,cAAc,GAAGL,KAT9B;AAUC,MAAA,eAAe,MAVhB;AAWC,MAAA,MAAM,EAAG;AACRQ,QAAAA,GAAG,EAAE,KADG;AAERC,QAAAA,KAAK,EAAEH,eAFC;AAGRI,QAAAA,MAAM,EAAE,IAHA;AAIRC,QAAAA,IAAI,EAAEJ;AAJE,OAXV;AAiBC,MAAA,aAAa,EAAG5C,aAjBjB;AAkBC,MAAA,YAAY,EAAG,CAAEgC,KAAF,EAASiB,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,KAAoC;AAClDlD,QAAAA,YAAY;AACZ7D,QAAAA,aAAa,CAAE;AACdJ,UAAAA,KAAK,EAAEoH,QAAQ,CAAEd,YAAY,GAAGa,KAAK,CAACnH,KAAvB,EAA8B,EAA9B,CADD;AAEdC,UAAAA,MAAM,EAAEmH,QAAQ,CAAEb,aAAa,GAAGY,KAAK,CAAClH,MAAxB,EAAgC,EAAhC;AAFF,SAAF,CAAb;AAIA;AAxBF,OA0BG+E,GA1BH,CADD;AA8BA;;AAED,SACC,cAAC,oBAAD;AACC,IAAA,EAAE,EAAGtF,EADN;AAEC,IAAA,GAAG,EAAGT,GAFP;AAGC,IAAA,YAAY,EAAGyD,YAHhB;AAIC,IAAA,aAAa,EAAGC,aAJjB;AAKC,IAAA,WAAW,EAAGM,WALf;AAMC,IAAA,WAAW,EAAKoE,eAAF,IACbjH,aAAa,CAAEiH,eAAF,CAPf;AASC,IAAA,SAAS,EAAGxE,cATb;AAUC,IAAA,eAAe,EAAG,MAAMC,iBAAiB,CAAE,KAAF;AAV1C,KAcG,CAAEzD,YAAF,IAAkBsG,QAdrB,EAeGX,GAfH,EAgBG,CAAE,CAAE9H,QAAQ,CAACoK,OAAT,CAAkB9H,OAAlB,CAAF,IAAiCa,UAAnC,KACD,cAAC,QAAD;AACC,IAAA,GAAG,EAAGQ,UADP;AAEC,IAAA,OAAO,EAAC,YAFT;AAGC,kBAAa/C,EAAE,CAAE,oBAAF,CAHhB;AAIC,IAAA,WAAW,EAAGA,EAAE,CAAE,aAAF,CAJjB;AAKC,IAAA,KAAK,EAAG0B,OALT;AAMC,IAAA,QAAQ,EAAK8D,KAAF,IACVlD,aAAa,CAAE;AAAEZ,MAAAA,OAAO,EAAE8D;AAAX,KAAF,CAPf;AASC,IAAA,aAAa,MATd;AAUC,IAAA,sBAAsB,EAAG,MACxBhD,iBAAiB,CAAEpC,WAAW,CAAE,gBAAF,CAAb;AAXnB,IAjBF,CADD;AAmCA","sourcesContent":["/**\n * External dependencies\n */\nimport { get, filter, map, last, pick, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { isBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarButton,\n} from '@wordpress/components';\nimport { useViewportMatch, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockControls,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tRichText,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n\tMediaReplaceFlow,\n\tstore as blockEditorStore,\n\tBlockAlignmentControl,\n} from '@wordpress/block-editor';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { __, sprintf, isRTL } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport { createBlock, switchToBlockType } from '@wordpress/blocks';\nimport { crop, overlayText, upload } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport useClientWidth from './use-client-width';\nimport ImageEditor, { ImageEditingProvider } from './image-editing';\nimport { isExternalImage } from './edit';\n\n/**\n * Module constants\n */\nimport { MIN_SIZE, ALLOWED_MEDIA_TYPES } from './constants';\n\nfunction getFilename( url ) {\n\tconst path = getPath( url );\n\tif ( path ) {\n\t\treturn last( path.split( '/' ) );\n\t}\n}\n\nexport default function Image( {\n\ttemporaryURL,\n\tattributes: {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\thref,\n\t\trel,\n\t\tlinkClass,\n\t\tlinkDestination,\n\t\ttitle,\n\t\twidth,\n\t\theight,\n\t\tlinkTarget,\n\t\tsizeSlug,\n\t},\n\tsetAttributes,\n\tisSelected,\n\tinsertBlocksAfter,\n\tonReplace,\n\tonSelectImage,\n\tonSelectURL,\n\tonUploadError,\n\tcontainerRef,\n\tclientId,\n} ) {\n\tconst captionRef = useRef();\n\tconst prevUrl = usePrevious( url );\n\tconst { getBlock } = useSelect( blockEditorStore );\n\tconst { image, multiImageSelection } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMedia } = select( coreStore );\n\t\t\tconst { getMultiSelectedBlockClientIds, getBlockName } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst multiSelectedClientIds = getMultiSelectedBlockClientIds();\n\t\t\treturn {\n\t\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\t\tmultiImageSelection:\n\t\t\t\t\tmultiSelectedClientIds.length &&\n\t\t\t\t\tmultiSelectedClientIds.every(\n\t\t\t\t\t\t( _clientId ) =>\n\t\t\t\t\t\t\tgetBlockName( _clientId ) === 'core/image'\n\t\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ id, isSelected ]\n\t);\n\tconst {\n\t\tcanInsertCover,\n\t\timageEditing,\n\t\timageSizes,\n\t\tmaxWidth,\n\t\tmediaUpload,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetSettings,\n\t\t\t\tcanInsertBlockType,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\t\t\tconst settings = pick( getSettings(), [\n\t\t\t\t'imageEditing',\n\t\t\t\t'imageSizes',\n\t\t\t\t'maxWidth',\n\t\t\t\t'mediaUpload',\n\t\t\t] );\n\n\t\t\treturn {\n\t\t\t\t...settings,\n\t\t\t\tcanInsertCover: canInsertBlockType(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { replaceBlocks, toggleSelection } = useDispatch( blockEditorStore );\n\tconst { createErrorNotice, createSuccessNotice } = useDispatch(\n\t\tnoticesStore\n\t);\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideAligned = includes( [ 'wide', 'full' ], align );\n\tconst [ { naturalWidth, naturalHeight }, setNaturalSize ] = useState( {} );\n\tconst [ isEditingImage, setIsEditingImage ] = useState( false );\n\tconst [ externalBlob, setExternalBlob ] = useState();\n\tconst clientWidth = useClientWidth( containerRef, [ align ] );\n\tconst isResizable = ! isWideAligned && isLargeViewport;\n\tconst imageSizeOptions = map(\n\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t),\n\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t);\n\n\t// If an image is externally hosted, try to fetch the image data. This may\n\t// fail if the image host doesn't allow CORS with the domain. If it works,\n\t// we can enable a button in the toolbar to upload the image.\n\tuseEffect( () => {\n\t\tif ( ! isExternalImage( id, url ) || ! isSelected || externalBlob ) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow\n\t\t\t.fetch( url )\n\t\t\t.then( ( response ) => response.blob() )\n\t\t\t.then( ( blob ) => setExternalBlob( blob ) )\n\t\t\t// Do nothing, cannot upload.\n\t\t\t.catch( () => {} );\n\t}, [ id, url, isSelected, externalBlob ] );\n\n\t// Focus the caption after inserting an image from the placeholder. This is\n\t// done to preserve the behaviour of focussing the first tabbable element\n\t// when a block is mounted. Previously, the image block would remount when\n\t// the placeholder is removed. Maybe this behaviour could be removed.\n\tuseEffect( () => {\n\t\tif ( url && ! prevUrl && isSelected ) {\n\t\t\tcaptionRef.current.focus();\n\t\t}\n\t}, [ url, prevUrl ] );\n\n\tfunction onResizeStart() {\n\t\ttoggleSelection( false );\n\t}\n\n\tfunction onResizeStop() {\n\t\ttoggleSelection( true );\n\t}\n\n\tfunction onImageError() {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tonReplace( embedBlock );\n\t\t}\n\t}\n\n\tfunction onSetHref( props ) {\n\t\tsetAttributes( props );\n\t}\n\n\tfunction onSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object\n\t\t// title.\n\t\tsetAttributes( { title: value } );\n\t}\n\n\tfunction updateAlt( newAlt ) {\n\t\tsetAttributes( { alt: newAlt } );\n\t}\n\n\tfunction updateImage( newSizeSlug ) {\n\t\tconst newUrl = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tnewSizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! newUrl ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: newUrl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug: newSizeSlug,\n\t\t} );\n\t}\n\n\tfunction uploadExternal() {\n\t\tmediaUpload( {\n\t\t\tfilesList: [ externalBlob ],\n\t\t\tonFileChange( [ img ] ) {\n\t\t\t\tonSelectImage( img );\n\n\t\t\t\tif ( isBlobURL( img.url ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetExternalBlob();\n\t\t\t\tcreateSuccessNotice( __( 'Image uploaded.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t},\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tonError( message ) {\n\t\t\t\tcreateErrorNotice( message, { type: 'snackbar' } );\n\t\t\t},\n\t\t} );\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetIsEditingImage( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\tconst canEditImage = id && naturalWidth && naturalHeight && imageEditing;\n\tconst allowCrop = ! multiImageSelection && canEditImage && ! isEditingImage;\n\n\tfunction switchToCover() {\n\t\treplaceBlocks(\n\t\t\tclientId,\n\t\t\tswitchToBlockType( getBlock( clientId ), 'core/cover' )\n\t\t);\n\t}\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<BlockAlignmentControl\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t/>\n\t\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\tonChangeUrl={ onSetHref }\n\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\tmediaUrl={ ( image && image.source_url ) || url }\n\t\t\t\t\t\tmediaLink={ image && image.link }\n\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ allowCrop && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ () => setIsEditingImage( true ) }\n\t\t\t\t\t\ticon={ crop }\n\t\t\t\t\t\tlabel={ __( 'Crop' ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ externalBlob && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ uploadExternal }\n\t\t\t\t\t\ticon={ upload }\n\t\t\t\t\t\tlabel={ __( 'Upload external image' ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && canInsertCover && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon={ overlayText }\n\t\t\t\t\t\tlabel={ __( 'Add text over image' ) }\n\t\t\t\t\t\tonClick={ switchToCover }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaId={ id }\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\t\tonError={ onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t{ ! multiImageSelection && (\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Alt text (alternative text)' ) }\n\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\tonChange={ updateAlt }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\tonChangeImage={ updateImage }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\timageWidth={ naturalWidth }\n\t\t\t\t\t\timageHeight={ naturalHeight }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Title attribute' ) }\n\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\tonChange={ onSetTitle }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</InspectorAdvancedControls>\n\t\t</>\n\t);\n\n\tconst filename = getFilename( url );\n\tlet defaultedAlt;\n\n\tif ( alt ) {\n\t\tdefaultedAlt = alt;\n\t} else if ( filename ) {\n\t\tdefaultedAlt = sprintf(\n\t\t\t/* translators: %s: file name */\n\t\t\t__( 'This image has an empty alt attribute; its file name is %s' ),\n\t\t\tfilename\n\t\t);\n\t} else {\n\t\tdefaultedAlt = __( 'This image has an empty alt attribute' );\n\t}\n\n\tlet img = (\n\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t// should direct focus to block.\n\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={ temporaryURL || url }\n\t\t\t\talt={ defaultedAlt }\n\t\t\t\tonError={ () => onImageError() }\n\t\t\t\tonLoad={ ( event ) => {\n\t\t\t\t\tsetNaturalSize(\n\t\t\t\t\t\tpick( event.target, [\n\t\t\t\t\t\t\t'naturalWidth',\n\t\t\t\t\t\t\t'naturalHeight',\n\t\t\t\t\t\t] )\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t{ temporaryURL && <Spinner /> }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t);\n\n\tlet imageWidthWithinContainer;\n\tlet imageHeightWithinContainer;\n\n\tif ( clientWidth && naturalWidth && naturalHeight ) {\n\t\tconst exceedMaxWidth = naturalWidth > clientWidth;\n\t\tconst ratio = naturalHeight / naturalWidth;\n\t\timageWidthWithinContainer = exceedMaxWidth ? clientWidth : naturalWidth;\n\t\timageHeightWithinContainer = exceedMaxWidth\n\t\t\t? clientWidth * ratio\n\t\t\t: naturalHeight;\n\t}\n\n\tif ( canEditImage && isEditingImage ) {\n\t\timg = (\n\t\t\t<ImageEditor\n\t\t\t\turl={ url }\n\t\t\t\twidth={ width }\n\t\t\t\theight={ height }\n\t\t\t\tclientWidth={ clientWidth }\n\t\t\t\tnaturalHeight={ naturalHeight }\n\t\t\t\tnaturalWidth={ naturalWidth }\n\t\t\t/>\n\t\t);\n\t} else if ( ! isResizable || ! imageWidthWithinContainer ) {\n\t\timg = <div style={ { width, height } }>{ img }</div>;\n\t} else {\n\t\tconst currentWidth = width || imageWidthWithinContainer;\n\t\tconst currentHeight = height || imageHeightWithinContainer;\n\n\t\tconst ratio = naturalWidth / naturalHeight;\n\t\tconst minWidth =\n\t\t\tnaturalWidth < naturalHeight ? MIN_SIZE : MIN_SIZE * ratio;\n\t\tconst minHeight =\n\t\t\tnaturalHeight < naturalWidth ? MIN_SIZE : MIN_SIZE / ratio;\n\n\t\t// With the current implementation of ResizableBox, an image needs an\n\t\t// explicit pixel value for the max-width. In absence of being able to\n\t\t// set the content-width, this max-width is currently dictated by the\n\t\t// vanilla editor style. The following variable adds a buffer to this\n\t\t// vanilla style, so 3rd party themes have some wiggleroom. This does,\n\t\t// in most cases, allow you to scale the image beyond the width of the\n\t\t// main column, though not infinitely.\n\t\t// @todo It would be good to revisit this once a content-width variable\n\t\t// becomes available.\n\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\tlet showRightHandle = false;\n\t\tlet showLeftHandle = false;\n\n\t\t/* eslint-disable no-lonely-if */\n\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\tif ( align === 'center' ) {\n\t\t\t// When the image is centered, show both handles.\n\t\t\tshowRightHandle = true;\n\t\t\tshowLeftHandle = true;\n\t\t} else if ( isRTL() ) {\n\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t// Show the right handle and hide the left handle only when it is\n\t\t\t// aligned left. Otherwise always show the left handle.\n\t\t\tif ( align === 'left' ) {\n\t\t\t\tshowRightHandle = true;\n\t\t\t} else {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Show the left handle and hide the right handle only when the\n\t\t\t// image is aligned right. Otherwise always show the right handle.\n\t\t\tif ( align === 'right' ) {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t} else {\n\t\t\t\tshowRightHandle = true;\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-lonely-if */\n\n\t\timg = (\n\t\t\t<ResizableBox\n\t\t\t\tsize={ {\n\t\t\t\t\twidth: width ?? 'auto',\n\t\t\t\t\theight: height ?? 'auto',\n\t\t\t\t} }\n\t\t\t\tshowHandle={ isSelected }\n\t\t\t\tminWidth={ minWidth }\n\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\tminHeight={ minHeight }\n\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\tlockAspectRatio\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt, delta ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\twidth: parseInt( currentWidth + delta.width, 10 ),\n\t\t\t\t\t\theight: parseInt( currentHeight + delta.height, 10 ),\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ img }\n\t\t\t</ResizableBox>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ImageEditingProvider\n\t\t\tid={ id }\n\t\t\turl={ url }\n\t\t\tnaturalWidth={ naturalWidth }\n\t\t\tnaturalHeight={ naturalHeight }\n\t\t\tclientWidth={ clientWidth }\n\t\t\tonSaveImage={ ( imageAttributes ) =>\n\t\t\t\tsetAttributes( imageAttributes )\n\t\t\t}\n\t\t\tisEditing={ isEditingImage }\n\t\t\tonFinishEditing={ () => setIsEditingImage( false ) }\n\t\t>\n\t\t\t{ /* Hide controls during upload to avoid component remount,\n\t\t\t\twhich causes duplicated image upload. */ }\n\t\t\t{ ! temporaryURL && controls }\n\t\t\t{ img }\n\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t<RichText\n\t\t\t\t\tref={ captionRef }\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\taria-label={ __( 'Image caption text' ) }\n\t\t\t\t\tplaceholder={ __( 'Add caption' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\tinlineToolbar\n\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ImageEditingProvider>\n\t);\n}\n"]}