{"version":3,"sources":["@wordpress/block-library/src/image/edit.native.js"],"names":["View","TouchableWithoutFeedback","Component","requestMediaImport","mediaUploadSync","requestImageFailedRetryDialog","requestImageUploadCancelDialog","requestImageFullscreenPreview","setFeaturedImage","Icon","PanelBody","ToolbarButton","ToolbarGroup","Image","WIDE_ALIGNMENTS","LinkSettingsNavigation","BottomSheet","BottomSheetTextControl","BottomSheetSelectControl","FooterMessageControl","FooterMessageLink","Badge","BlockCaption","MediaPlaceholder","MediaUpload","MediaUploadProgress","MEDIA_TYPE_IMAGE","BlockControls","InspectorControls","BlockAlignmentToolbar","BlockStyles","store","blockEditorStore","__","sprintf","getProtocol","hasQueryArg","doAction","hasAction","compose","withPreferredColorScheme","withSelect","withDispatch","image","placeholderIcon","replace","fullscreen","textColor","coreStore","editPostStore","styles","getUpdatedLinkTargetSettings","LINK_DESTINATION_CUSTOM","MEDIA_ID_NO_FEATURED_IMAGE_SET","getUrlForSlug","sizeSlug","undefined","media_details","sizes","source_url","ImageEdit","constructor","props","state","isCaptionSelected","finishMediaUploadWithSuccess","bind","finishMediaUploadWithFailure","mediaUploadStateReset","onSelectMediaUploadOption","updateMediaProgress","updateImageURL","onSetLinkDestination","onSetNewTab","onSetSizeSlug","onImagePressed","onSetFeatured","onFocusCaption","updateAlignment","accessibilityLabelCreator","setMappedAttributes","onSizeChangeValue","linkSettingsOptions","url","label","placeholder","autoFocus","autoFill","openInNewTab","linkRel","componentDidMount","attributes","setAttributes","id","console","warn","componentWillUnmount","isUploadInProgress","componentDidUpdate","previousProps","getDerivedStateFromProps","isSelected","caption","trim","length","setState","payload","mediaUrl","mediaServerId","mediaId","width","height","nextAlign","extraUpdatedAttributes","Object","values","alignments","includes","align","href","linkDestination","value","updatedLinkTarget","media","imageDefaultSize","mediaAttributes","additionalAttributes","onFocus","getPlaceholderIcon","getStylesFromColorScheme","iconPlaceholder","iconPlaceholderDark","getWidth","restAttributes","getLinkSettings","isLinkSheetVisible","unMappedAttributes","mappedAttributes","rel","linkTarget","dismissSheet","getAltTextSettings","alt","updateAlt","newAlt","newValue","closeSettingsBottomSheet","getFeaturedButtonPanel","isFeaturedImage","setFeaturedButtonStyle","setFeaturedButton","setFeaturedButtonDark","removeFeaturedButton","setFeaturedButtonCellContainer","render","clientId","featuredImageId","wasBlockJustInserted","className","imageSizes","Array","isArray","sizeOptions","filter","slug","map","name","selectedSizeOption","sizeOptionsValid","find","option","canImageBeFeatured","getToolbarEditButton","open","getInspectorControls","panelBody","featuredImagePanelTitle","content","alignToFlex","left","center","right","full","wide","getImageComponent","openMediaOptions","getMediaOptions","isUploadFailed","retryMessage","onBlur","insertBlocksAfter","select","getMedia","getSettings","getEditedPostAttribute","isNotFileUrl","shouldGetMedia","dispatch","closeGeneralSidebar"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\trequestMediaImport,\n\tmediaUploadSync,\n\trequestImageFailedRetryDialog,\n\trequestImageUploadCancelDialog,\n\trequestImageFullscreenPreview,\n\tsetFeaturedImage,\n} from '@wordpress/react-native-bridge';\nimport {\n\tIcon,\n\tPanelBody,\n\tToolbarButton,\n\tToolbarGroup,\n\tImage,\n\tWIDE_ALIGNMENTS,\n\tLinkSettingsNavigation,\n\tBottomSheet,\n\tBottomSheetTextControl,\n\tBottomSheetSelectControl,\n\tFooterMessageControl,\n\tFooterMessageLink,\n\tBadge,\n} from '@wordpress/components';\nimport {\n\tBlockCaption,\n\tMediaPlaceholder,\n\tMediaUpload,\n\tMediaUploadProgress,\n\tMEDIA_TYPE_IMAGE,\n\tBlockControls,\n\tInspectorControls,\n\tBlockAlignmentToolbar,\n\tBlockStyles,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { getProtocol, hasQueryArg } from '@wordpress/url';\nimport { doAction, hasAction } from '@wordpress/hooks';\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\timage as placeholderIcon,\n\treplace,\n\tfullscreen,\n\ttextColor,\n} from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as editPostStore } from '@wordpress/edit-post';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport { getUpdatedLinkTargetSettings } from './utils';\n\nimport {\n\tLINK_DESTINATION_CUSTOM,\n\tMEDIA_ID_NO_FEATURED_IMAGE_SET,\n} from './constants';\n\nconst getUrlForSlug = ( image, sizeSlug ) => {\n\tif ( ! sizeSlug ) {\n\t\treturn undefined;\n\t}\n\treturn image?.media_details?.sizes?.[ sizeSlug ]?.source_url;\n};\n\nexport class ImageEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tisCaptionSelected: false,\n\t\t};\n\n\t\tthis.finishMediaUploadWithSuccess = this.finishMediaUploadWithSuccess.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.finishMediaUploadWithFailure = this.finishMediaUploadWithFailure.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.mediaUploadStateReset = this.mediaUploadStateReset.bind( this );\n\t\tthis.onSelectMediaUploadOption = this.onSelectMediaUploadOption.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.updateMediaProgress = this.updateMediaProgress.bind( this );\n\t\tthis.updateImageURL = this.updateImageURL.bind( this );\n\t\tthis.onSetLinkDestination = this.onSetLinkDestination.bind( this );\n\t\tthis.onSetNewTab = this.onSetNewTab.bind( this );\n\t\tthis.onSetSizeSlug = this.onSetSizeSlug.bind( this );\n\t\tthis.onImagePressed = this.onImagePressed.bind( this );\n\t\tthis.onSetFeatured = this.onSetFeatured.bind( this );\n\t\tthis.onFocusCaption = this.onFocusCaption.bind( this );\n\t\tthis.updateAlignment = this.updateAlignment.bind( this );\n\t\tthis.accessibilityLabelCreator = this.accessibilityLabelCreator.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.setMappedAttributes = this.setMappedAttributes.bind( this );\n\t\tthis.onSizeChangeValue = this.onSizeChangeValue.bind( this );\n\n\t\tthis.linkSettingsOptions = {\n\t\t\turl: {\n\t\t\t\tlabel: __( 'Image Link URL' ),\n\t\t\t\tplaceholder: __( 'Add URL' ),\n\t\t\t\tautoFocus: false,\n\t\t\t\tautoFill: true,\n\t\t\t},\n\t\t\topenInNewTab: {\n\t\t\t\tlabel: __( 'Open in new tab' ),\n\t\t\t},\n\t\t\tlinkRel: {\n\t\t\t\tlabel: __( 'Link Rel' ),\n\t\t\t\tplaceholder: __( 'None' ),\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { attributes, setAttributes } = this.props;\n\t\t// This will warn when we have `id` defined, while `url` is undefined.\n\t\t// This may help track this issue: https://github.com/wordpress-mobile/WordPress-Android/issues/9768\n\t\t// where a cancelled image upload was resulting in a subsequent crash.\n\t\tif ( attributes.id && ! attributes.url ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn( 'Attributes has id with no url.' );\n\t\t}\n\n\t\t// Detect any pasted image and start an upload\n\t\tif (\n\t\t\t! attributes.id &&\n\t\t\tattributes.url &&\n\t\t\tgetProtocol( attributes.url ) === 'file:'\n\t\t) {\n\t\t\trequestMediaImport( attributes.url, ( id, url ) => {\n\t\t\t\tif ( url ) {\n\t\t\t\t\tsetAttributes( { id, url } );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Make sure we mark any temporary images as failed if they failed while\n\t\t// the editor wasn't open\n\t\tif (\n\t\t\tattributes.id &&\n\t\t\tattributes.url &&\n\t\t\tgetProtocol( attributes.url ) === 'file:'\n\t\t) {\n\t\t\tmediaUploadSync();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// this action will only exist if the user pressed the trash button on the block holder\n\t\tif (\n\t\t\thasAction( 'blocks.onRemoveBlockCheckUpload' ) &&\n\t\t\tthis.state.isUploadInProgress\n\t\t) {\n\t\t\tdoAction(\n\t\t\t\t'blocks.onRemoveBlockCheckUpload',\n\t\t\t\tthis.props.attributes.id\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentDidUpdate( previousProps ) {\n\t\tif ( ! previousProps.image && this.props.image ) {\n\t\t\tconst { image, attributes } = this.props;\n\t\t\tconst url =\n\t\t\t\tgetUrlForSlug( image, attributes?.sizeSlug ) ||\n\t\t\t\timage.source_url;\n\t\t\tthis.props.setAttributes( { url } );\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\t// Avoid a UI flicker in the toolbar by insuring that isCaptionSelected\n\t\t// is updated immediately any time the isSelected prop becomes false\n\t\treturn {\n\t\t\tisCaptionSelected: props.isSelected && state.isCaptionSelected,\n\t\t};\n\t}\n\n\taccessibilityLabelCreator( caption ) {\n\t\t// Checks if caption is empty.\n\t\treturn ( typeof caption === 'string' && caption.trim().length === 0 ) ||\n\t\t\tcaption === undefined ||\n\t\t\tcaption === null\n\t\t\t? /* translators: accessibility text. Empty image caption. */\n\t\t\t  'Image caption. Empty'\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: accessibility text. %s: image caption. */\n\t\t\t\t\t__( 'Image caption. %s' ),\n\t\t\t\t\tcaption\n\t\t\t  );\n\t}\n\n\tonImagePressed() {\n\t\tconst { attributes, image } = this.props;\n\n\t\tif ( this.state.isUploadInProgress ) {\n\t\t\trequestImageUploadCancelDialog( attributes.id );\n\t\t} else if (\n\t\t\tattributes.id &&\n\t\t\tgetProtocol( attributes.url ) === 'file:'\n\t\t) {\n\t\t\trequestImageFailedRetryDialog( attributes.id );\n\t\t} else if ( ! this.state.isCaptionSelected ) {\n\t\t\trequestImageFullscreenPreview(\n\t\t\t\tattributes.url,\n\t\t\t\timage && image.source_url\n\t\t\t);\n\t\t}\n\n\t\tthis.setState( {\n\t\t\tisCaptionSelected: false,\n\t\t} );\n\t}\n\n\tupdateMediaProgress( payload ) {\n\t\tconst { setAttributes } = this.props;\n\t\tif ( payload.mediaUrl ) {\n\t\t\tsetAttributes( { url: payload.mediaUrl } );\n\t\t}\n\n\t\tif ( ! this.state.isUploadInProgress ) {\n\t\t\tthis.setState( { isUploadInProgress: true } );\n\t\t}\n\t}\n\n\tfinishMediaUploadWithSuccess( payload ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( { url: payload.mediaUrl, id: payload.mediaServerId } );\n\t\tthis.setState( { isUploadInProgress: false } );\n\t}\n\n\tfinishMediaUploadWithFailure( payload ) {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( { id: payload.mediaId } );\n\t\tthis.setState( { isUploadInProgress: false } );\n\t}\n\n\tmediaUploadStateReset() {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( { id: null, url: null } );\n\t\tthis.setState( { isUploadInProgress: false } );\n\t}\n\n\tupdateImageURL( url ) {\n\t\tthis.props.setAttributes( {\n\t\t\turl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t} );\n\t}\n\n\tupdateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = Object.values(\n\t\t\tWIDE_ALIGNMENTS.alignments\n\t\t).includes( nextAlign )\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tthis.props.setAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tonSetLinkDestination( href ) {\n\t\tthis.props.setAttributes( {\n\t\t\tlinkDestination: LINK_DESTINATION_CUSTOM,\n\t\t\thref,\n\t\t} );\n\t}\n\n\tonSetNewTab( value ) {\n\t\tconst updatedLinkTarget = getUpdatedLinkTargetSettings(\n\t\t\tvalue,\n\t\t\tthis.props.attributes\n\t\t);\n\t\tthis.props.setAttributes( updatedLinkTarget );\n\t}\n\n\tonSetSizeSlug( sizeSlug ) {\n\t\tconst { image } = this.props;\n\n\t\tconst url = getUrlForSlug( image, sizeSlug );\n\t\tif ( ! url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\turl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug,\n\t\t} );\n\t}\n\n\tonSelectMediaUploadOption( media ) {\n\t\tconst {\n\t\t\tattributes: { id, url },\n\t\t\timageDefaultSize,\n\t\t} = this.props;\n\n\t\tconst mediaAttributes = {\n\t\t\tid: media.id,\n\t\t\turl: media.url,\n\t\t\tcaption: media.caption,\n\t\t};\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: imageDefaultSize,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\" option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t} );\n\t}\n\n\tonFocusCaption() {\n\t\tif ( this.props.onFocus ) {\n\t\t\tthis.props.onFocus();\n\t\t}\n\t\tif ( ! this.state.isCaptionSelected ) {\n\t\t\tthis.setState( {\n\t\t\t\tisCaptionSelected: true,\n\t\t\t} );\n\t\t}\n\t}\n\n\tgetPlaceholderIcon() {\n\t\treturn (\n\t\t\t<Icon\n\t\t\t\ticon={ placeholderIcon }\n\t\t\t\t{ ...this.props.getStylesFromColorScheme(\n\t\t\t\t\tstyles.iconPlaceholder,\n\t\t\t\t\tstyles.iconPlaceholderDark\n\t\t\t\t) }\n\t\t\t/>\n\t\t);\n\t}\n\n\tgetWidth() {\n\t\tconst { attributes } = this.props;\n\t\tconst { align, width } = attributes;\n\n\t\treturn Object.values( WIDE_ALIGNMENTS.alignments ).includes( align )\n\t\t\t? '100%'\n\t\t\t: width;\n\t}\n\n\tsetMappedAttributes( { url: href, ...restAttributes } ) {\n\t\tconst { setAttributes } = this.props;\n\t\treturn href === undefined\n\t\t\t? setAttributes( restAttributes )\n\t\t\t: setAttributes( { ...restAttributes, href } );\n\t}\n\n\tgetLinkSettings() {\n\t\tconst { isLinkSheetVisible } = this.state;\n\t\tconst {\n\t\t\tattributes: { href: url, ...unMappedAttributes },\n\t\t} = this.props;\n\n\t\tconst mappedAttributes = { ...unMappedAttributes, url };\n\n\t\treturn (\n\t\t\t<LinkSettingsNavigation\n\t\t\t\tisVisible={ isLinkSheetVisible }\n\t\t\t\turl={ mappedAttributes.url }\n\t\t\t\trel={ mappedAttributes.rel }\n\t\t\t\tlabel={ mappedAttributes.label }\n\t\t\t\tlinkTarget={ mappedAttributes.linkTarget }\n\t\t\t\tonClose={ this.dismissSheet }\n\t\t\t\tsetAttributes={ this.setMappedAttributes }\n\t\t\t\twithBottomSheet={ false }\n\t\t\t\thasPicker\n\t\t\t\toptions={ this.linkSettingsOptions }\n\t\t\t\tshowIcon={ false }\n\t\t\t/>\n\t\t);\n\t}\n\n\tgetAltTextSettings() {\n\t\tconst {\n\t\t\tattributes: { alt },\n\t\t} = this.props;\n\n\t\tconst updateAlt = ( newAlt ) => {\n\t\t\tthis.props.setAttributes( { alt: newAlt } );\n\t\t};\n\n\t\treturn (\n\t\t\t<BottomSheetTextControl\n\t\t\t\tinitialValue={ alt }\n\t\t\t\tonChange={ updateAlt }\n\t\t\t\tplaceholder={ __( 'Add alt text' ) }\n\t\t\t\tlabel={ __( 'Alt Text' ) }\n\t\t\t\ticon={ textColor }\n\t\t\t\tfooterNote={\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Describe the purpose of the image. Leave empty if the image is purely decorative. '\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<FooterMessageLink\n\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t'https://www.w3.org/WAI/tutorials/images/decision-tree/'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={ __( 'What is alt text?' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t}\n\n\tonSizeChangeValue( newValue ) {\n\t\tthis.onSetSizeSlug( newValue );\n\t}\n\n\tonSetFeatured( mediaId ) {\n\t\tconst { closeSettingsBottomSheet } = this.props;\n\t\tsetFeaturedImage( mediaId );\n\t\tcloseSettingsBottomSheet();\n\t}\n\n\tgetFeaturedButtonPanel( isFeaturedImage ) {\n\t\tconst { attributes, getStylesFromColorScheme } = this.props;\n\n\t\tconst setFeaturedButtonStyle = getStylesFromColorScheme(\n\t\t\tstyles.setFeaturedButton,\n\t\t\tstyles.setFeaturedButtonDark\n\t\t);\n\n\t\tconst removeFeaturedButton = () => (\n\t\t\t<BottomSheet.Cell\n\t\t\t\tlabel={ __( 'Remove as Featured Image ' ) }\n\t\t\t\tlabelStyle={ [\n\t\t\t\t\tsetFeaturedButtonStyle,\n\t\t\t\t\tstyles.removeFeaturedButton,\n\t\t\t\t] }\n\t\t\t\tcellContainerStyle={ styles.setFeaturedButtonCellContainer }\n\t\t\t\tseparatorType={ 'none' }\n\t\t\t\tonPress={ () =>\n\t\t\t\t\tthis.onSetFeatured( MEDIA_ID_NO_FEATURED_IMAGE_SET )\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\n\t\tconst setFeaturedButton = () => (\n\t\t\t<BottomSheet.Cell\n\t\t\t\tlabel={ __( 'Set as Featured Image ' ) }\n\t\t\t\tlabelStyle={ setFeaturedButtonStyle }\n\t\t\t\tcellContainerStyle={ styles.setFeaturedButtonCellContainer }\n\t\t\t\tseparatorType={ 'none' }\n\t\t\t\tonPress={ () => this.onSetFeatured( attributes.id ) }\n\t\t\t/>\n\t\t);\n\n\t\treturn isFeaturedImage ? removeFeaturedButton() : setFeaturedButton();\n\t}\n\n\trender() {\n\t\tconst { isCaptionSelected } = this.state;\n\t\tconst {\n\t\t\tattributes,\n\t\t\tisSelected,\n\t\t\timage,\n\t\t\tclientId,\n\t\t\timageDefaultSize,\n\t\t\tfeaturedImageId,\n\t\t\twasBlockJustInserted,\n\t\t} = this.props;\n\t\tconst { align, url, alt, id, sizeSlug, className } = attributes;\n\n\t\tconst imageSizes = Array.isArray( this.props.imageSizes )\n\t\t\t? this.props.imageSizes\n\t\t\t: [];\n\t\t// Only map available image sizes for the user to choose.\n\t\tconst sizeOptions = imageSizes\n\t\t\t.filter( ( { slug } ) => getUrlForSlug( image, slug ) )\n\t\t\t.map( ( { name, slug } ) => ( { value: slug, label: name } ) );\n\n\t\tlet selectedSizeOption = sizeSlug || imageDefaultSize;\n\t\tlet sizeOptionsValid = sizeOptions.find(\n\t\t\t( option ) => option.value === selectedSizeOption\n\t\t);\n\n\t\tif ( ! sizeOptionsValid ) {\n\t\t\t// Default to 'full' size if the default large size is not available.\n\t\t\tsizeOptionsValid = sizeOptions.find(\n\t\t\t\t( option ) => option.value === 'full'\n\t\t\t);\n\t\t\tselectedSizeOption = 'full';\n\t\t}\n\n\t\t// By default, it's only possible to set images that have been uploaded to a site's library as featured.\n\t\t// The 'canImageBeFeatured' check filters out images that haven't been uploaded based on the following:\n\t\t// - Images that are embedded in a post but are uploaded elsewhere have an id of 'undefined'.\n\t\t// - Image that are uploading or have failed to upload are given a temporary negative ID.\n\t\tconst canImageBeFeatured =\n\t\t\ttypeof attributes.id !== 'undefined' && attributes.id > 0;\n\n\t\tconst isFeaturedImage =\n\t\t\tcanImageBeFeatured && featuredImageId === attributes.id;\n\n\t\tconst getToolbarEditButton = ( open ) => (\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\t\t\t\ticon={ replace }\n\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ this.updateAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t);\n\n\t\tconst getInspectorControls = () => (\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Image settings' ) } />\n\t\t\t\t<PanelBody style={ styles.panelBody }>\n\t\t\t\t\t<BlockStyles clientId={ clientId } url={ url } />\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t{ image && sizeOptionsValid && (\n\t\t\t\t\t\t<BottomSheetSelectControl\n\t\t\t\t\t\t\ticon={ fullscreen }\n\t\t\t\t\t\t\tlabel={ __( 'Size' ) }\n\t\t\t\t\t\t\toptions={ sizeOptions }\n\t\t\t\t\t\t\tonChange={ this.onSizeChangeValue }\n\t\t\t\t\t\t\tvalue={ selectedSizeOption }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ this.getAltTextSettings() }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={ __( 'Link Settings' ) }>\n\t\t\t\t\t{ this.getLinkSettings( true ) }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={ __( 'Featured Image' ) }\n\t\t\t\t\ttitleStyle={ styles.featuredImagePanelTitle }\n\t\t\t\t>\n\t\t\t\t\t{ canImageBeFeatured &&\n\t\t\t\t\t\tthis.getFeaturedButtonPanel( isFeaturedImage ) }\n\t\t\t\t\t<FooterMessageControl\n\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t'Changes to featured image will not be affected by the undo/redo buttons.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tcellContainerStyle={\n\t\t\t\t\t\t\tstyles.setFeaturedButtonCellContainer\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t);\n\n\t\tif ( ! url ) {\n\t\t\treturn (\n\t\t\t\t<View style={ styles.content }>\n\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\tallowedTypes={ [ MEDIA_TYPE_IMAGE ] }\n\t\t\t\t\t\tonSelect={ this.onSelectMediaUploadOption }\n\t\t\t\t\t\ticon={ this.getPlaceholderIcon() }\n\t\t\t\t\t\tonFocus={ this.props.onFocus }\n\t\t\t\t\t\tautoOpenMediaUpload={\n\t\t\t\t\t\t\tisSelected && wasBlockJustInserted\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\n\t\tconst alignToFlex = {\n\t\t\tleft: 'flex-start',\n\t\t\tcenter: 'center',\n\t\t\tright: 'flex-end',\n\t\t\tfull: 'center',\n\t\t\twide: 'center',\n\t\t};\n\n\t\tconst getImageComponent = ( openMediaOptions, getMediaOptions ) => (\n\t\t\t<Badge label={ __( 'Featured' ) } show={ isFeaturedImage }>\n\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\taccessible={ ! isSelected }\n\t\t\t\t\tonPress={ this.onImagePressed }\n\t\t\t\t\tonLongPress={ openMediaOptions }\n\t\t\t\t\tdisabled={ ! isSelected }\n\t\t\t\t>\n\t\t\t\t\t<View style={ styles.content }>\n\t\t\t\t\t\t{ isSelected && getInspectorControls() }\n\t\t\t\t\t\t{ isSelected && getMediaOptions() }\n\t\t\t\t\t\t{ ! this.state.isCaptionSelected &&\n\t\t\t\t\t\t\tgetToolbarEditButton( openMediaOptions ) }\n\t\t\t\t\t\t<MediaUploadProgress\n\t\t\t\t\t\t\tcoverUrl={ url }\n\t\t\t\t\t\t\tmediaId={ id }\n\t\t\t\t\t\t\tonUpdateMediaProgress={ this.updateMediaProgress }\n\t\t\t\t\t\t\tonFinishMediaUploadWithSuccess={\n\t\t\t\t\t\t\t\tthis.finishMediaUploadWithSuccess\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFinishMediaUploadWithFailure={\n\t\t\t\t\t\t\t\tthis.finishMediaUploadWithFailure\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonMediaUploadStateReset={\n\t\t\t\t\t\t\t\tthis.mediaUploadStateReset\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenderContent={ ( {\n\t\t\t\t\t\t\t\tisUploadInProgress,\n\t\t\t\t\t\t\t\tisUploadFailed,\n\t\t\t\t\t\t\t\tretryMessage,\n\t\t\t\t\t\t\t} ) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\talign={ align && alignToFlex[ align ] }\n\t\t\t\t\t\t\t\t\t\talt={ alt }\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tisSelected && ! isCaptionSelected\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisUploadFailed={ isUploadFailed }\n\t\t\t\t\t\t\t\t\t\tisUploadInProgress={\n\t\t\t\t\t\t\t\t\t\t\tisUploadInProgress\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelectMediaUploadOption={\n\t\t\t\t\t\t\t\t\t\t\tthis.onSelectMediaUploadOption\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\topenMediaOptions={ openMediaOptions }\n\t\t\t\t\t\t\t\t\t\tretryMessage={ retryMessage }\n\t\t\t\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t\t\t\t\tshapeStyle={ styles[ className ] }\n\t\t\t\t\t\t\t\t\t\twidth={ this.getWidth() }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t<BlockCaption\n\t\t\t\t\tclientId={ this.props.clientId }\n\t\t\t\t\tisSelected={ this.state.isCaptionSelected }\n\t\t\t\t\taccessible\n\t\t\t\t\taccessibilityLabelCreator={ this.accessibilityLabelCreator }\n\t\t\t\t\tonFocus={ this.onFocusCaption }\n\t\t\t\t\tonBlur={ this.props.onBlur } // always assign onBlur as props\n\t\t\t\t\tinsertBlocksAfter={ this.props.insertBlocksAfter }\n\t\t\t\t/>\n\t\t\t</Badge>\n\t\t);\n\n\t\treturn (\n\t\t\t<MediaUpload\n\t\t\t\tallowedTypes={ [ MEDIA_TYPE_IMAGE ] }\n\t\t\t\tisReplacingMedia={ true }\n\t\t\t\tonSelect={ this.onSelectMediaUploadOption }\n\t\t\t\trender={ ( { open, getMediaOptions } ) => {\n\t\t\t\t\treturn getImageComponent( open, getMediaOptions );\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, props ) => {\n\t\tconst { getMedia } = select( coreStore );\n\t\tconst { getSettings, wasBlockJustInserted } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\t\tconst {\n\t\t\tattributes: { id, url },\n\t\t\tisSelected,\n\t\t\tclientId,\n\t\t} = props;\n\t\tconst { imageSizes, imageDefaultSize } = getSettings();\n\t\tconst isNotFileUrl = id && getProtocol( url ) !== 'file:';\n\t\tconst featuredImageId = getEditedPostAttribute( 'featured_media' );\n\n\t\tconst shouldGetMedia =\n\t\t\t( isSelected && isNotFileUrl ) ||\n\t\t\t// Edge case to update the image after uploading if the block gets unselected\n\t\t\t// Check if it's the original image and not the resized one with queryparams\n\t\t\t( ! isSelected &&\n\t\t\t\tisNotFileUrl &&\n\t\t\t\turl &&\n\t\t\t\t! hasQueryArg( url, 'w' ) );\n\n\t\treturn {\n\t\t\timage: shouldGetMedia ? getMedia( id ) : null,\n\t\t\timageSizes,\n\t\t\timageDefaultSize,\n\t\t\tfeaturedImageId,\n\t\t\twasBlockJustInserted: wasBlockJustInserted(\n\t\t\t\tclientId,\n\t\t\t\t'inserter_menu'\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tcloseSettingsBottomSheet() {\n\t\t\t\tdispatch( editPostStore ).closeGeneralSidebar();\n\t\t\t},\n\t\t};\n\t} ),\n\twithPreferredColorScheme,\n] )( ImageEdit );\n"]}