{"version":3,"sources":["@wordpress/block-library/src/post-date/edit.js"],"names":["classnames","useEntityProp","useState","__experimentalGetSettings","dateI18n","AlignmentControl","BlockControls","InspectorControls","useBlockProps","ToolbarButton","ToggleControl","Popover","DateTimePicker","PanelBody","CustomSelectControl","__","sprintf","edit","PostDateEdit","attributes","textAlign","format","isLink","context","postId","postType","queryId","setAttributes","isDescendentOfQueryLoop","siteFormat","date","setDate","isPickerOpen","setIsPickerOpen","settings","is12Hour","test","formats","time","toLowerCase","replace","split","reverse","join","formatOptions","Object","values","map","formatOption","key","name","resolvedFormat","blockProps","className","postDate","bind","event","preventDefault","nextAlign","_isPickerOpen","selectedItem","find","option"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\nimport { __experimentalGetSettings, dateI18n } from '@wordpress/date';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tInspectorControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport {\n\tToolbarButton,\n\tToggleControl,\n\tPopover,\n\tDateTimePicker,\n\tPanelBody,\n\tCustomSelectControl,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { edit } from '@wordpress/icons';\n\nexport default function PostDateEdit( {\n\tattributes: { textAlign, format, isLink },\n\tcontext: { postId, postType, queryId },\n\tsetAttributes,\n} ) {\n\tconst isDescendentOfQueryLoop = !! queryId;\n\tconst [ siteFormat ] = useEntityProp( 'root', 'site', 'date_format' );\n\tconst [ date, setDate ] = useEntityProp(\n\t\t'postType',\n\t\tpostType,\n\t\t'date',\n\t\tpostId\n\t);\n\tconst [ isPickerOpen, setIsPickerOpen ] = useState( false );\n\tconst settings = __experimentalGetSettings();\n\t// To know if the current time format is a 12 hour time, look for \"a\".\n\t// Also make sure this \"a\" is not escaped by a \"/\".\n\tconst is12Hour = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only for the lower case \"a\".\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\tconst formatOptions = Object.values( settings.formats ).map(\n\t\t( formatOption ) => ( {\n\t\t\tkey: formatOption,\n\t\t\tname: dateI18n( formatOption, date ),\n\t\t} )\n\t);\n\tconst resolvedFormat = format || siteFormat || settings.formats.date;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tlet postDate = date ? (\n\t\t<time dateTime={ dateI18n( 'c', date ) }>\n\t\t\t{ dateI18n( resolvedFormat, date ) }\n\t\t\t{ isPickerOpen && (\n\t\t\t\t<Popover onClose={ setIsPickerOpen.bind( null, false ) }>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tcurrentDate={ date }\n\t\t\t\t\t\tonChange={ setDate }\n\t\t\t\t\t\tis12Hour={ is12Hour }\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t) }\n\t\t</time>\n\t) : (\n\t\t__( 'No Date' )\n\t);\n\tif ( isLink && date ) {\n\t\tpostDate = (\n\t\t\t<a\n\t\t\t\thref=\"#post-date-pseudo-link\"\n\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t>\n\t\t\t\t{ postDate }\n\t\t\t</a>\n\t\t);\n\t}\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t{ date && ! isDescendentOfQueryLoop && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon={ edit }\n\t\t\t\t\t\ttitle={ __( 'Change Date' ) }\n\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\tsetIsPickerOpen(\n\t\t\t\t\t\t\t\t( _isPickerOpen ) => ! _isPickerOpen\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Format settings' ) }>\n\t\t\t\t\t<CustomSelectControl\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\tlabel={ __( 'Date Format' ) }\n\t\t\t\t\t\toptions={ formatOptions }\n\t\t\t\t\t\tonChange={ ( { selectedItem } ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tformat: selectedItem.key,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ formatOptions.find(\n\t\t\t\t\t\t\t( option ) => option.key === resolvedFormat\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={ __( 'Link settings' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t// translators: %s: Name of the post type e.g: \"post\".\n\t\t\t\t\t\t\t__( 'Link to %s' ),\n\t\t\t\t\t\t\tpostType\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonChange={ () => setAttributes( { isLink: ! isLink } ) }\n\t\t\t\t\t\tchecked={ isLink }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>{ postDate }</div>\n\t\t</>\n\t);\n}\n"]}