import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { Placeholder, TextControl, Button } from '@wordpress/components';
import { useState } from '@wordpress/element';
import { blockDefault } from '@wordpress/icons';
import { InnerBlocks, useBlockProps } from '@wordpress/block-editor';
const ALLOWED_BLOCKS = ['core/post-comment-content', 'core/post-comment-author']; // TODO: JSDOC types

export default function Edit({
  attributes,
  setAttributes
}) {
  const {
    commentId
  } = attributes;
  const [commentIdInput, setCommentIdInput] = useState(commentId);
  const blockProps = useBlockProps();

  if (!commentId) {
    return createElement("div", blockProps, createElement(Placeholder, {
      icon: blockDefault,
      label: __('Post Comment'),
      instructions: __('To show a comment, input the comment ID.')
    }, createElement(TextControl, {
      value: commentId,
      onChange: val => setCommentIdInput(parseInt(val))
    }), createElement(Button, {
      variant: "primary",
      onClick: () => {
        setAttributes({
          commentId: commentIdInput
        });
      }
    }, __('Save'))));
  }

  return createElement("div", blockProps, createElement(InnerBlocks, {
    allowedBlocks: ALLOWED_BLOCKS
  }));
}
//# sourceMappingURL=edit.js.map