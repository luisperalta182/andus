{"version":3,"sources":["@wordpress/block-library/src/embed/edit.native.js"],"names":["createUpgradedEmbedBlock","getAttributesFromPreview","getEmbedInfoByProvider","EmbedControls","embedContentIcon","EmbedLoading","EmbedPlaceholder","EmbedPreview","EmbedBottomSheet","classnames","_x","useState","useEffect","useSelect","useBlockProps","store","blockEditorStore","coreStore","View","EmbedEdit","props","attributes","providerNameSlug","previewable","responsive","url","isSelected","onReplace","setAttributes","insertBlocksAfter","onFocus","clientId","defaultEmbedInfo","title","icon","wasBlockJustInserted","select","isEditingURL","setIsEditingURL","preview","fetching","cannotEmbed","getEmbedPreview","isPreviewEmbedFallback","isRequestingEmbedPreview","embedPreview","previewIsFallback","badEmbedProvider","html","type","undefined","wordpressCantEmbed","code","validPreview","isFetching","getMergedAttributes","allowResponsive","className","newURL","replace","upgradedBlock","blockProps","showEmbedPlaceholder","classFromPreview","event","value"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetAttributesFromPreview,\n\tgetEmbedInfoByProvider,\n} from './util';\nimport EmbedControls from './embed-controls';\nimport { embedContentIcon } from './icons';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\nimport EmbedBottomSheet from './embed-bottom-sheet';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { View } from '@wordpress/primitives';\n\nconst EmbedEdit = ( props ) => {\n\tconst {\n\t\tattributes: { providerNameSlug, previewable, responsive, url },\n\t\tattributes,\n\t\tisSelected,\n\t\tonReplace,\n\t\tsetAttributes,\n\t\tinsertBlocksAfter,\n\t\tonFocus,\n\t\tclientId,\n\t} = props;\n\n\tconst defaultEmbedInfo = {\n\t\ttitle: _x( 'Embed', 'block title' ),\n\t\ticon: embedContentIcon,\n\t};\n\tconst { icon, title } =\n\t\tgetEmbedInfoByProvider( providerNameSlug ) || defaultEmbedInfo;\n\n\tconst { wasBlockJustInserted } = useSelect(\n\t\t( select ) => ( {\n\t\t\twasBlockJustInserted: select(\n\t\t\t\tblockEditorStore\n\t\t\t).wasBlockJustInserted( clientId, 'inserter_menu' ),\n\t\t} ),\n\t\t[ clientId ]\n\t);\n\tconst [ isEditingURL, setIsEditingURL ] = useState(\n\t\tisSelected && wasBlockJustInserted && ! url\n\t);\n\n\tconst { preview, fetching, cannotEmbed } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEmbedPreview,\n\t\t\t\tisPreviewEmbedFallback,\n\t\t\t\tisRequestingEmbedPreview,\n\t\t\t} = select( coreStore );\n\t\t\tif ( ! url ) {\n\t\t\t\treturn { fetching: false, cannotEmbed: false };\n\t\t\t}\n\n\t\t\tconst embedPreview = getEmbedPreview( url );\n\t\t\tconst previewIsFallback = isPreviewEmbedFallback( url );\n\n\t\t\t// The external oEmbed provider does not exist. We got no type info and no html.\n\t\t\tconst badEmbedProvider =\n\t\t\t\tembedPreview?.html === false &&\n\t\t\t\tembedPreview?.type === undefined;\n\t\t\t// Some WordPress URLs that can't be embedded will cause the API to return\n\t\t\t// a valid JSON response with no HTML and `code` set to 404, rather\n\t\t\t// than generating a fallback response as other embeds do.\n\t\t\tconst wordpressCantEmbed = embedPreview?.code === '404';\n\t\t\tconst validPreview =\n\t\t\t\t!! embedPreview && ! badEmbedProvider && ! wordpressCantEmbed;\n\n\t\t\t// `isRequestingEmbedPreview` is returning false just before an\n\t\t\t// `apiFetch` is triggered. We're assuming that a fetch is happening\n\t\t\t// if there is an `attributesUrl` set but there is no data in\n\t\t\t// `embedPreview` which represents the response returned from the API.\n\t\t\tconst isFetching =\n\t\t\t\tisRequestingEmbedPreview( url ) || ( url && ! embedPreview );\n\n\t\t\treturn {\n\t\t\t\tpreview: validPreview ? embedPreview : undefined,\n\t\t\t\tfetching: isFetching,\n\t\t\t\tcannotEmbed: ! validPreview || previewIsFallback,\n\t\t\t};\n\t\t},\n\t\t[ url ]\n\t);\n\n\t/**\n\t * @return {Object} Attributes derived from the preview, merged with the current attributes.\n\t */\n\tconst getMergedAttributes = () => {\n\t\tconst { allowResponsive, className } = attributes;\n\t\treturn {\n\t\t\t...attributes,\n\t\t\t...getAttributesFromPreview(\n\t\t\t\tpreview,\n\t\t\t\ttitle,\n\t\t\t\tclassName,\n\t\t\t\tresponsive,\n\t\t\t\tallowResponsive\n\t\t\t),\n\t\t};\n\t};\n\n\tuseEffect( () => {\n\t\tif ( ! preview?.html || ! cannotEmbed || fetching ) {\n\t\t\treturn;\n\t\t}\n\t\t// At this stage, we're not fetching the preview and know it can't be embedded,\n\t\t// so try removing any trailing slash, and resubmit.\n\t\tconst newURL = url.replace( /\\/$/, '' );\n\t\tsetIsEditingURL( false );\n\t\tsetAttributes( { url: newURL } );\n\t}, [ preview?.html, url ] );\n\n\t// Handle incoming preview\n\tuseEffect( () => {\n\t\tif ( preview && ! isEditingURL ) {\n\t\t\t// Even though we set attributes that get derived from the preview,\n\t\t\t// we don't access them directly because for the initial render,\n\t\t\t// the `setAttributes` call will not have taken effect. If we're\n\t\t\t// rendering responsive content, setting the responsive classes\n\t\t\t// after the preview has been rendered can result in unwanted\n\t\t\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t\t\t// that `getMergedAttributes` uses is memoized so that we're not\n\t\t\t// calculating them on every render.\n\t\t\tsetAttributes( getMergedAttributes() );\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tprops,\n\t\t\t\t\tgetMergedAttributes()\n\t\t\t\t);\n\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tonReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [ preview, isEditingURL ] );\n\n\tconst blockProps = useBlockProps();\n\n\tif ( fetching ) {\n\t\treturn (\n\t\t\t<View { ...blockProps }>\n\t\t\t\t<EmbedLoading />\n\t\t\t</View>\n\t\t);\n\t}\n\n\tconst showEmbedPlaceholder = ! preview || cannotEmbed;\n\tconst { type, className: classFromPreview } = getMergedAttributes();\n\tconst className = classnames( classFromPreview, props.className );\n\n\treturn (\n\t\t<>\n\t\t\t{ showEmbedPlaceholder ? (\n\t\t\t\t<View { ...blockProps }>\n\t\t\t\t\t<EmbedPlaceholder\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\tonPress={ ( event ) => {\n\t\t\t\t\t\t\tonFocus( event );\n\t\t\t\t\t\t\tsetIsEditingURL( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<EmbedControls\n\t\t\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\t\t\tswitchBackToURLInput={ () => setIsEditingURL( true ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<View { ...blockProps }>\n\t\t\t\t\t\t<EmbedPreview\n\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tpreview={ preview }\n\t\t\t\t\t\t\tpreviewable={ previewable }\n\t\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<EmbedBottomSheet\n\t\t\t\tvalue={ url }\n\t\t\t\tisVisible={ isEditingURL }\n\t\t\t\tonClose={ () => setIsEditingURL( false ) }\n\t\t\t\tonSubmit={ ( value ) => {\n\t\t\t\t\tsetIsEditingURL( false );\n\t\t\t\t\tsetAttributes( { url: value } );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default EmbedEdit;\n"]}