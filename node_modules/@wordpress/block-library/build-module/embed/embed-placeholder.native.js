import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import { View, Text, TouchableWithoutFeedback } from 'react-native';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
import { usePreferredColorSchemeStyle } from '@wordpress/compose';
import { Icon } from '@wordpress/components';
/**
 * Internal dependencies
 */

import styles from './styles.scss';
import { noticeOutline } from '../../../components/src/mobile/gridicons';

const EmbedPlaceholder = ({
  icon,
  isSelected,
  label,
  onPress,
  cannotEmbed
}) => {
  const containerStyle = usePreferredColorSchemeStyle(styles.embed__container, styles['embed__container--dark']);
  const labelStyle = usePreferredColorSchemeStyle(styles.embed__label, styles['embed__label--dark']);
  const descriptionStyle = styles.embed__description;
  const descriptionErrorStyle = styles['embed__description--error'];
  const actionStyle = usePreferredColorSchemeStyle(styles.embed__action, styles['embed__action--dark']);
  const embedIconStyle = usePreferredColorSchemeStyle(styles.embed__icon, styles['embed__icon--dark']);
  const embedIconErrorStyle = styles['embed__icon--error'];
  return createElement(Fragment, null, createElement(TouchableWithoutFeedback, {
    accessibilityRole: 'button',
    accessibilityHint: __('Double tap to add a link.'),
    onPress: onPress,
    disabled: !isSelected
  }, createElement(View, {
    style: containerStyle
  }, cannotEmbed ? createElement(Fragment, null, createElement(Icon, {
    icon: noticeOutline,
    fill: embedIconErrorStyle.fill,
    style: embedIconErrorStyle
  }), createElement(Text, {
    style: [descriptionStyle, descriptionErrorStyle]
  }, __('Unable to embed media')), createElement(Text, {
    style: actionStyle
  }, __('EDIT LINK'))) : createElement(Fragment, null, createElement(Icon, {
    icon: icon,
    fill: embedIconStyle.fill
  }), createElement(Text, {
    style: labelStyle
  }, label), createElement(Text, {
    style: actionStyle
  }, __('ADD LINK'))))));
};

export default EmbedPlaceholder;
//# sourceMappingURL=embed-placeholder.native.js.map