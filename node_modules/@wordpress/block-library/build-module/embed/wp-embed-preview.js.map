{"version":3,"sources":["@wordpress/block-library/src/embed/wp-embed-preview.js"],"names":["useRef","useEffect","useMemo","WpEmbedPreview","html","ref","ownerDocument","current","defaultView","resizeWPembeds","data","secret","message","value","some","attribute","querySelectorAll","forEach","iframe","height","checkFocus","activeElement","tagName","parentNode","focus","addEventListener","removeEventListener","__html","doc","window","DOMParser","parseFromString","querySelector","removeAttribute","blockQuote","style","display","body","innerHTML"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,OAA5B,QAA2C,oBAA3C;AAEA;;AAEA,eAAe,SAASC,cAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAClD,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AAEAC,EAAAA,SAAS,CAAE,MAAM;AAChB,UAAM;AAAEK,MAAAA;AAAF,QAAoBD,GAAG,CAACE,OAA9B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkBF,aAAxB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,aAASG,cAAT,CAAyB;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA;AAAnB,UAA6B;AAArC,KAAzB,EAAqE;AACpE,UACC,CAAEF,MAAF,EAAUC,OAAV,EAAmBC,KAAnB,EAA2BC,IAA3B,CACGC,SAAF,IAAiB,CAAEA,SADpB,KAGAH,OAAO,KAAK,QAJb,EAKE;AACD;AACA;;AAEDN,MAAAA,aAAa,CACXU,gBADF,CACqB,uBAAuBL,MAAQ,GADpD,EAEEM,OAFF,CAEaC,MAAF,IAAc;AACvB,YAAK,CAACA,MAAM,CAACC,MAAR,KAAmBN,KAAxB,EAAgC;AAC/BK,UAAAA,MAAM,CAACC,MAAP,GAAgBN,KAAhB;AACA;AACD,OANF;AAOA;AAED;AACF;AACA;AACA;;;AACE,aAASO,UAAT,GAAsB;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAoBf,aAA1B;;AAEA,UACCe,aAAa,CAACC,OAAd,KAA0B,QAA1B,IACAD,aAAa,CAACE,UAAd,KAA6BlB,GAAG,CAACE,OAFlC,EAGE;AACD;AACA;;AAEDc,MAAAA,aAAa,CAACG,KAAd;AACA;;AAEDhB,IAAAA,WAAW,CAACiB,gBAAZ,CAA8B,SAA9B,EAAyChB,cAAzC;AACAD,IAAAA,WAAW,CAACiB,gBAAZ,CAA8B,MAA9B,EAAsCL,UAAtC;AAEA,WAAO,MAAM;AACZZ,MAAAA,WAAW,CAACkB,mBAAZ,CAAiC,SAAjC,EAA4CjB,cAA5C;AACAD,MAAAA,WAAW,CAACkB,mBAAZ,CAAiC,MAAjC,EAAyCN,UAAzC;AACA,KAHD;AAIA,GA3DQ,EA2DN,EA3DM,CAAT;;AA6DA,QAAMO,MAAM,GAAGzB,OAAO,CAAE,MAAM;AAC7B,UAAM0B,GAAG,GAAG,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAwC3B,IAAxC,EAA8C,WAA9C,CAAZ;AACA,UAAMc,MAAM,GAAGU,GAAG,CAACI,aAAJ,CAAmB,QAAnB,CAAf;;AAEA,QAAKd,MAAL,EAAc;AACbA,MAAAA,MAAM,CAACe,eAAP,CAAwB,OAAxB;AACA;;AAED,UAAMC,UAAU,GAAGN,GAAG,CAACI,aAAJ,CAAmB,YAAnB,CAAnB;;AAEA,QAAKE,UAAL,EAAkB;AACjBA,MAAAA,UAAU,CAACC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACA;;AAED,WAAOR,GAAG,CAACS,IAAJ,CAASC,SAAhB;AACA,GAfqB,EAenB,CAAElC,IAAF,CAfmB,CAAtB;;AAiBA,SACC;AACC,IAAA,GAAG,EAAGC,GADP;AAEC,IAAA,SAAS,EAAC,yBAFX;AAGC,IAAA,uBAAuB,EAAG;AAAEsB,MAAAA;AAAF;AAH3B,IADD;AAOA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useMemo } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\nexport default function WpEmbedPreview( { html } ) {\n\tconst ref = useRef();\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\t/**\n\t\t * Checks for WordPress embed events signaling the height change when iframe\n\t\t * content loads or iframe's window is resized.  The event is sent from\n\t\t * WordPress core via the window.postMessage API.\n\t\t *\n\t\t * References:\n\t\t * window.postMessage: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n\t\t * WordPress core embed-template on load: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L143\n\t\t * WordPress core embed-template on resize: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L187\n\t\t *\n\t\t * @param {WPSyntheticEvent} event Message event.\n\t\t */\n\t\tfunction resizeWPembeds( { data: { secret, message, value } = {} } ) {\n\t\t\tif (\n\t\t\t\t[ secret, message, value ].some(\n\t\t\t\t\t( attribute ) => ! attribute\n\t\t\t\t) ||\n\t\t\t\tmessage !== 'height'\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\townerDocument\n\t\t\t\t.querySelectorAll( `iframe[data-secret=\"${ secret }\"` )\n\t\t\t\t.forEach( ( iframe ) => {\n\t\t\t\t\tif ( +iframe.height !== value ) {\n\t\t\t\t\t\tiframe.height = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Checks whether the wp embed iframe is the activeElement,\n\t\t * if it is dispatch a focus event.\n\t\t */\n\t\tfunction checkFocus() {\n\t\t\tconst { activeElement } = ownerDocument;\n\n\t\t\tif (\n\t\t\t\tactiveElement.tagName !== 'IFRAME' ||\n\t\t\t\tactiveElement.parentNode !== ref.current\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tactiveElement.focus();\n\t\t}\n\n\t\tdefaultView.addEventListener( 'message', resizeWPembeds );\n\t\tdefaultView.addEventListener( 'blur', checkFocus );\n\n\t\treturn () => {\n\t\t\tdefaultView.removeEventListener( 'message', resizeWPembeds );\n\t\t\tdefaultView.removeEventListener( 'blur', checkFocus );\n\t\t};\n\t}, [] );\n\n\tconst __html = useMemo( () => {\n\t\tconst doc = new window.DOMParser().parseFromString( html, 'text/html' );\n\t\tconst iframe = doc.querySelector( 'iframe' );\n\n\t\tif ( iframe ) {\n\t\t\tiframe.removeAttribute( 'style' );\n\t\t}\n\n\t\tconst blockQuote = doc.querySelector( 'blockquote' );\n\n\t\tif ( blockQuote ) {\n\t\t\tblockQuote.style.display = 'none';\n\t\t}\n\n\t\treturn doc.body.innerHTML;\n\t}, [ html ] );\n\n\treturn (\n\t\t<div\n\t\t\tref={ ref }\n\t\t\tclassName=\"wp-block-embed__wrapper\"\n\t\t\tdangerouslySetInnerHTML={ { __html } }\n\t\t/>\n\t);\n}\n"]}